/*! Revaluate 2.0.0 - 2015-29-04, 3:06:25 AM */
"use strict";angular.module("config",[]).constant("ENV",{name:"development",apiEndpoint:"http://revaluate-api-dev.herokuapp.com",mixPanelId:"e9ba9ca056ce11433777e3c8f59014b4"}),angular.module("common",["chart.js","ui.router","ngSanitize","ui.bootstrap.transition","ui.bootstrap.datepicker","ui.bootstrap.dateparser","ui.bootstrap.dropdown","ui.bootstrap.modal","angular-flash.service","angular-flash.flash-alert-directive"]).config(["$httpProvider",function(a){a.interceptors.push("JWTInterceptor"),a.interceptors.push("ActivityInterceptor"),a.interceptors.push("ErrorInterceptor")}]).run(function(){function a(){var a=moment(moment().year()).isSame(this.year());return a?"ddd, MMM D":"ddd, MMM D YYYY"}moment.locale("en",{calendar:{lastDay:"[Yesterday]",sameDay:"[Today]",nextDay:"[Tomorrow]",lastWeek:a,nextWeek:a,sameElse:a}})}),angular.module("common").constant("ALERTS_CONSTANTS",{login:"login",signUp:"signUp",signUpConfirm:"signUpConfirm",signUpSetUp:"signUpSetUp",forgotPassword:"forgotPassword",requestSignUpRegistration:"requestSignUpRegistration",resetPassword:"resetPassword",updatePassword:"updatePassword",validatePassword:"validatePassword",createUpdateExpense:"createUpdateExpense",expenseList:"expenseList",categoryList:"categoryList",createUpdateCategory:"createUpdateCategory",updateProfile:"updateProfile",preferences:"preferences"}),angular.module("common").constant("ACTIVITY_INTERCEPTOR",{activityStart:"activity-interceptor-start",activityEnd:"activity-interceptor-end"}).constant("STATES",{home:"home",profile:"profile",expenses:"expenses.regular",setUp:"setup",account:"account"}).constant("ACCESS_LEVEL",{forLoggedUser:"forLoggedUser",forGuestUser:"forGuestUser"}).constant("ERROR_INTERCEPTOR",{status500:"status500"}),angular.module("common").constant("DATE_SOURCE",{isFromNlp:"naturalLanguageProcessorSource",isFromUpdateAction:"updateExpenseSource"}),angular.module("common").constant("MIXPANEL_EVENTS",{landingPageLoaded:"Landing page loaded",signUpRequested:"Signup requested",signUpCompleted:"Signup completed",expensesPage:"Expenses page (site visited)",expenseModalOpened:"Expense modal opened",expenseCreated:"Expense created",expenseUpdated:"Expense updated",expenseDeleted:"Expense deleted",categoriesPage:"Categories page (site visited)",categoryCreated:"Category created",categoryUpdated:"Category updated",categoryDeleted:"Category deleted",insightsPage:"Insights page (site visited)",settings:"Settings",error404:"error-404",error500:"error-500"}),angular.module("common").directive("animate",function(){return{restrict:"A",link:function(a,b,c){a.$on(c.animateOn,function(){b.addClass(c.animateClass)}),b.on("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){b.removeClass(c.animateClass)})}}}),angular.module("common").directive("autoFocus",["$timeout",function(a){return{restrict:"A",link:function(b,c,d){d.autoFocus?b.$watch(d.autoFocus,function(b){b===!0&&a(function(){c.focus()})}):c.focus()}}}]),angular.module("common").directive("emailList",function(){return{restrict:"A",require:"ngModel",scope:{emails:"=ngModel",parentForm:"="},templateUrl:"app/common/partials/emailList/emailList.html",link:function(a,b,c){a.canAddEmail=!0,a.$watch("emails.length",function(a,c){a>c&&b.find("input").focus()}),a.addEmail=function(b){(isNaN(c.maxEmails)||a.emails.length<parseInt(c.maxEmails))&&a.emails.push({email:b}),!isNaN(c.maxEmails)&&a.emails.length>=parseInt(c.maxEmails)&&(a.canAddEmail=!1)},a.removeEmail=function(b){a.emails.splice(b,1),a.canAddEmail=!0}}}}),angular.module("common").directive("escKey",function(){return function(a,b,c){b.bind("keydown keypress",function(b){27===b.which&&(a.$apply(function(){a.$eval(c.escKey)}),b.preventDefault())})}}),angular.module("common").directive("flashMessages",function(){return{scope:{flash:"=",identifierId:"@"},restrict:"A",templateUrl:"app/common/partials/flash-messages.html",link:function(a,b,c){}}}),angular.module("common").directive("focusFirstError",[function(){return{restrict:"A",link:function(a,b,c){var d=c.focusFirstError||".has-error input";b.on("submit",function(){b.find(d).first().focus()})}}}]),angular.module("common").directive("footer",function(){return{restrict:"A",templateUrl:"app/common/partials/footer.html",link:function(a,b){}}}),angular.module("common").directive("footerHome",function(){return{restrict:"A",templateUrl:"app/common/partials/footer-home.html",link:function(a,b){}}}),angular.module("common").directive("header",["$rootScope",function(a){return{restrict:"A",templateUrl:"app/common/partials/header.html",link:function(b,c){b.currentUser=a.currentUser}}}]),angular.module("common").directive("headerHome",["$rootScope",function(a){return{restrict:"A",templateUrl:"app/common/partials/header-home.html",link:function(b,c){b.currentUser=a.currentUser}}}]),angular.module("common").directive("loadingBar",["$rootScope","ACTIVITY_INTERCEPTOR",function(a,b){return{restrict:"A",template:"<div class='loading-bar-progress'></div>",link:function(c,d){var e="loading-bar--active";a.$on(b.activityStart,function(){d.addClass(e)}),a.$on(b.activityEnd,function(){d.removeClass(e)})}}}]),angular.module("common").directive("mixpanelInitializer",["$window","ENV",function(a,b){return{restrict:"A",compile:function(){return{pre:function(){var c=a.mixpanel||{};c.init(b.mixPanelId)}}}}}]),angular.module("common").directive("ngEnter",function(){return function(a,b,c){b.bind("keydown keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter,{event:b})}),b.preventDefault())})}}),angular.module("common").directive("nlpDate",["$rootScope","DATE_SOURCE",function(a,b){return{require:"ngModel",scope:{date:"=",text:"=ngModel"},restrict:"A",link:function(c,d,e,f){c.$watch("text",function(d){if(e.required&&d&&e.separator&&f.$setValidity("nlp-required",0!==$.trim(d).indexOf(e.separator)),d&&e.separator&&(d=d.split(e.separator)[1]),d){var g=Date.create(d);g.isValid()&&(e.minDate&&g.isBefore(c.$eval(e.minDate))||e.maxDate&&e.maxDate&&g.isAfter(e.maxDate)||((c.date.getYear()!=g.getYear()||c.date.getMonth()!=g.getMonth()||c.date.getDay()!=g.getDay())&&a.$broadcast("nlpDate:dateChange",null),(c.date.getHours()!=g.getHours()||c.date.getMinutes()!=g.getMinutes()||c.date.getSeconds()!=g.getSeconds())&&a.$broadcast("nlpDate:timeChange",null),g[b.isFromNlp]=!0,c.date=g))}})}}}]),angular.module("common").directive("outsideClick",["$document",function(a){return{restrict:"A",link:function(b,c,d){a.on("click",function(a){if(!(a.target.className.indexOf("angucomplete")>-1)){var e=c.find(a.target).length>0;e||b.$apply(d.outsideClick)}}),c.on("$destroy",function(){a.off("click")})}}}]),angular.module("common").directive("perfectScrollbar",function(){return{restrict:"A",link:function(a,b,c){b.perfectScrollbar({wheelSpeed:a.$eval(c.wheelSpeed)||50,wheelPropagation:a.$eval(c.wheelPropagation)||!1,minScrollbarLength:a.$eval(c.minScrollbarLength)||!1,useBothWheelAxes:a.$eval(c.useBothWheelAxes)||!1,useKeyboard:a.$eval(c.useKeyboard)||!0,suppressScrollX:a.$eval(c.suppressScrollX)||!1,suppressScrollY:a.$eval(c.suppressScrollY)||!1,scrollXMarginOffset:a.$eval(c.scrollXMarginOffset)||0,scrollYMarginOffset:a.$eval(c.scrollYMarginOffset)||0}),c.updateOn&&a.$on(c.updateOn,function(){b.perfectScrollbar("update")})}}}),angular.module("common").directive("scrollTo",["$window",function(a){return{restrict:"A",link:function(a,b,c){b.on("click",function(a){$("html, body").animate({scrollTop:$(c.scrollTo).offset().top},parseInt(c.scrollSpeed)||800),a.preventDefault()})}}}]),angular.module("common").directive("searchWidget",function(){return{restrict:"A",link:function(a,b){new UISearch(document.getElementById("sb-search"))}}}),angular.module("common").directive("submitOn",function(){return{link:function(a,b,c){a.$on(c.submitOn,function(){setTimeout(function(){b.trigger("submit")})})}}}),angular.module("common").directive("validDate",function(){return{require:"ngModel",scope:{ngModel:"="},link:function(a,b,c,d){function e(a){return!(""===a||_.isUndefined(a))}d.$validators.validDate=function(a){return e(a)}}}}),angular.module("common").filter("friendlyDate",function(){return function(a){return _.isDate(a)||(a=moment(a).toDate()),moment(a).calendar()}}),angular.module("common").filter("friendlyHour",function(){return function(a){return moment(a).format("h:mm A")}}),angular.module("common").filter("friendlyHourTimePicker",function(){return function(a){return moment(a).format("hh:mm A")}}),angular.module("common").filter("friendlyRecipients",["$rootScope",function(a){return function(b){var c=a.currentUser.model.email;if(!_.isUndefined(b)&&_.isArray(b)){var d="";return _.each(b,function(a){d.length>0&&(d+=", ");var b=c===a.email?"Me":a.email;d+=b}),d}}}]),angular.module("common").filter("orderObjectBy",function(){return function(a,b,c){function d(a,b){return a[b]}var e=[];return angular.forEach(a,function(a){e.push(a)}),e.sort(function(a,c){var e,f=b.split(".").reduce(d,a),g=b.split(".").reduce(d,c);return e=f===g?0:f>g?1:-1}),c&&e.reverse(),e}}),angular.module("common").filter("groupExpenses",["$parse","filterWatcher",function(a,b){return function(a,c){function d(a){function b(a,b){return a.matchingGroup.diff.date<b.matchingGroup.diff.date?-1:a.matchingGroup.diff.date>b.matchingGroup.diff.date?1:"Today"===a.matchingGroup.name&&"This month"===b.matchingGroup.name?-1:0}var d,e,g=[];return f(a,function(a){d=a.matchingGroup,e=d.name,_.some(g,function(a){return a.name===e})||g.push({name:e,matchingGroup:d,values:[]}),_.find(g,function(a){return a.name===e}).values.push(a)}),g.sort(b),c&&g.reverse(),g}var e=angular.isObject,f=angular.forEach;return e(a)?b.isMemoized("groupBy",arguments)||b.memoize("groupBy",arguments,this,d(a)):a}}]),angular.module("common").factory("ActivityInterceptor",["$rootScope","$q","ACTIVITY_INTERCEPTOR",function(a,b,c){return{request:function(b){return b.cache||a.$broadcast(c.activityStart),b},response:function(b){return b.config.cache||a.$broadcast(c.activityEnd),b},responseError:function(d){return d.config.cache||a.$broadcast(c.activityEnd),b.reject(d)}}}]),angular.module("common").factory("ErrorInterceptor",["$rootScope","$q","ERROR_INTERCEPTOR",function(a,b,c){return{responseError:function(d){return 500!==d.status||d.config.cache||a.$broadcast(c.status500,d),b.reject(d)}}}]),angular.module("common").provider("JWTInterceptor",function(){this.authHeader="Authorization",this.authPrefix="Bearer ";var a=this;this.$get=["$q","$injector","$rootScope","SessionService",function(b,c,d,e){return{request:function(d){if(d.skipAuthorization)return d;if(d.headers=d.headers||{},d.headers[a.authHeader])return d;var f=b.when(c.invoke(function(){return e.getJwtToken()},this,{config:d}));return f.then(function(b){return b&&(d.headers[a.authHeader]=a.authPrefix+b),d})}}}]}),angular.module("common").service("DatesUtils",function(){this.prepareDate=function(a){var b=30,c=moment(),d=c.minutes(),e=c.hours();return d>=b?(d=0,e+=1):d=b,Date.create(a).set({hours:e,minute:d,second:0})}}),angular.module("common").factory("ExpenseMatchingGroupService",function(){var a=moment(),b=[{name:"Today",diff:{date:moment().set("day",a.day()),unit:"day"}},{name:"Tomorrow",diff:{date:moment().set("day",a.day()+1),unit:"day"}},{name:"Yesterday",diff:{date:moment().set("day",a.day()-1),unit:"day"}},{name:"This month",diff:{date:moment().set("month",a.month()),unit:"month"}},{name:"Next month",diff:{date:moment().set("month",a.month()+1),unit:"month"}},{name:"Last month",diff:{date:moment().set("month",a.month()-1),unit:"month"}}];return{populateExpensesWithMatchingGroups:function(a,c){_.each(a,function(a){var c=_.find(b,function(b){return b.diff.date.isSame(a.model.spentDate,b.diff.unit)});if(c)a.matchingGroup=c;else{var d=moment(a.model.spentDate),e=moment(moment().year()).isSame(d.year());a.matchingGroup={name:d.format(e?"MMMM":"MMMM, YYYY"),diff:{date:moment(d),unit:"month"}}}})},populateExpenseWithMatchingGroup:function(a,b){return this.populateExpensesWithMatchingGroups([a],b)}}}),angular.module("common").service("JWTHelper",function(){this.urlBase64Decode=function(a){var b=a.replace("-","+").replace("_","/");switch(b.length%4){case 0:break;case 2:b+="==";break;case 3:b+="=";break;default:throw"Illegal base64url string!"}return window.atob(b)},this.decodeToken=function(a){var b=a.split(".");if(3!==b.length)throw new Error("JWT must have 3 parts");var c=this.urlBase64Decode(b[1]);if(!c)throw new Error("Cannot decode the token");return JSON.parse(c)},this.getTokenExpirationDate=function(a){var b;if(b=this.decodeToken(a),!b.exp)return null;var c=new Date(0);return c.setUTCSeconds(b.exp),c},this.isTokenExpired=function(a){var b=this.getTokenExpirationDate(a);return b?!(b.valueOf()>(new Date).valueOf()):!1}}),angular.module("common").service("SessionService",["$localStorage",function(a){var b="auth_session_data",c="auth_jwt_token";this.create=function(a,b){this.setData(a),this.setJwtToken(b)},this.setData=function(c){a[b]=angular.toJson(c)},this.getData=function(){return angular.fromJson(a[b])},this.setJwtToken=function(b){a[c]=angular.toJson(b)},this.getJwtToken=function(){return angular.fromJson(a[c])},this.sessionExists=function(){return a[b]&&a[c]},this.destroy=function(){delete a[b],delete a[c]}}]),angular.module("common").service("StatesHandler",["$state","$stateParams","STATES",function(a,b,c){this.goHome=function(){this.go(c.home)},this.goToProfile=function(){this.go(c.profile)},this.goToSetUp=function(){this.go(c.setUp)},this.goToLogin=function(){this.go(c.account)},this.goToResetPassword=function(){this.go(c.account)},this.go=function(b){a.go(b)},this.goToExpenses=function(){this.go(c.expenses)},this.refreshCurrentState=function(){a.transitionTo(a.current,b,{reload:!0,inherit:!1,notify:!0})}}]),angular.module("common").service("TimezoneProvider",function(){this.timezones=[{key:"Pacific/Midway",value:"(UTC-11:00) Midway Island"},{key:"Pacific/Samoa",value:"(UTC-11:00) Samoa"},{key:"Pacific/Honolulu",value:"(UTC-10:00) Hawaii"},{key:"US/Alaska",value:"(UTC-09:00) Alaska"},{key:"America/Los_Angeles",value:"(UTC-08:00) Pacific Time (US &amp; Canada)"},{key:"America/Tijuana",value:"(UTC-08:00) Tijuana"},{key:"US/Arizona",value:"(UTC-07:00) Arizona"},{key:"America/Chihuahua",value:"(UTC-07:00) Chihuahua"},{key:"America/Chihuahua",value:"(UTC-07:00) La Paz"},{key:"America/Mazatlan",value:"(UTC-07:00) Mazatlan"},{key:"US/Mountain",value:"(UTC-07:00) Mountain Time (US &amp; Canada)"},{key:"America/Managua",value:"(UTC-06:00) Central America"},{key:"US/Central",value:"(UTC-06:00) Central Time (US &amp; Canada)"},{key:"America/Mexico_City",value:"(UTC-06:00) Guadalajara"},{key:"America/Mexico_City",value:"(UTC-06:00) Mexico City"},{key:"America/Monterrey",value:"(UTC-06:00) Monterrey"},{key:"Canada/Saskatchewan",value:"(UTC-06:00) Saskatchewan"},{key:"America/Bogota",value:"(UTC-05:00) Bogota"},{key:"US/Eastern",value:"(UTC-05:00) Eastern Time (US &amp; Canada)"},{key:"US/East-Indiana",value:"(UTC-05:00) Indiana (East)"},{key:"America/Lima",value:"(UTC-05:00) Lima"},{key:"America/Bogota",value:"(UTC-05:00) Quito"},{key:"Canada/Atlantic",value:"(UTC-04:00) Atlantic Time (Canada)"},{key:"America/Caracas",value:"(UTC-04:30) Caracas"},{key:"America/La_Paz",value:"(UTC-04:00) La Paz"},{key:"America/Santiago",value:"(UTC-04:00) Santiago"},{key:"Canada/Newfoundland",value:"(UTC-03:30) Newfoundland"},{key:"America/Sao_Paulo",value:"(UTC-03:00) Brasilia"},{key:"America/Argentina/Buenos_Aires",value:"(UTC-03:00) Buenos Aires"},{key:"America/Argentina/Buenos_Aires",value:"(UTC-03:00) Georgetown"},{key:"America/Godthab",value:"(UTC-03:00) Greenland"},{key:"America/Noronha",value:"(UTC-02:00) Mid-Atlantic"},{key:"Atlantic/Azores",value:"(UTC-01:00) Azores"},{key:"Atlantic/Cape_Verde",value:"(UTC-01:00) Cape Verde Is."},{key:"Africa/Casablanca",value:"(UTC+00:00) Casablanca"},{key:"Europe/London",value:"(UTC+00:00) Edinburgh"},{key:"Etc/Greenwich",value:"(UTC+00:00) Greenwich Mean Time : Dublin"},{key:"Europe/Lisbon",value:"(UTC+00:00) Lisbon"},{key:"Europe/London",value:"(UTC+00:00) London"},{key:"Africa/Monrovia",value:"(UTC+00:00) Monrovia"},{key:"UTC",value:"(UTC+00:00) UTC"},{key:"Europe/Amsterdam",value:"(UTC+01:00) Amsterdam"},{key:"Europe/Belgrade",value:"(UTC+01:00) Belgrade"},{key:"Europe/Berlin",value:"(UTC+01:00) Berlin"},{key:"Europe/Berlin",value:"(UTC+01:00) Bern"},{key:"Europe/Bratislava",value:"(UTC+01:00) Bratislava"},{key:"Europe/Brussels",value:"(UTC+01:00) Brussels"},{key:"Europe/Budapest",value:"(UTC+01:00) Budapest"},{key:"Europe/Copenhagen",value:"(UTC+01:00) Copenhagen"},{key:"Europe/Ljubljana",value:"(UTC+01:00) Ljubljana"},{key:"Europe/Madrid",value:"(UTC+01:00) Madrid"},{key:"Europe/Paris",value:"(UTC+01:00) Paris"},{key:"Europe/Prague",value:"(UTC+01:00) Prague"},{key:"Europe/Rome",value:"(UTC+01:00) Rome"},{key:"Europe/Sarajevo",value:"(UTC+01:00) Sarajevo"},{key:"Europe/Skopje",value:"(UTC+01:00) Skopje"},{key:"Europe/Stockholm",value:"(UTC+01:00) Stockholm"},{key:"Europe/Vienna",value:"(UTC+01:00) Vienna"},{key:"Europe/Warsaw",value:"(UTC+01:00) Warsaw"},{key:"Africa/Lagos",value:"(UTC+01:00) West Central Africa"},{key:"Europe/Zagreb",value:"(UTC+01:00) Zagreb"},{key:"Europe/Athens",value:"(UTC+02:00) Athens"},{key:"Europe/Bucharest",value:"(UTC+02:00) Bucharest"},{key:"Africa/Cairo",value:"(UTC+02:00) Cairo"},{key:"Africa/Harare",value:"(UTC+02:00) Harare"},{key:"Europe/Helsinki",value:"(UTC+02:00) Helsinki"},{key:"Europe/Istanbul",value:"(UTC+02:00) Istanbul"},{key:"Asia/Jerusalem",value:"(UTC+02:00) Jerusalem"},{key:"Europe/Helsinki",value:"(UTC+02:00) Kyiv"},{key:"Africa/Johannesburg",value:"(UTC+02:00) Pretoria"},{key:"Europe/Riga",value:"(UTC+02:00) Riga"},{key:"Europe/Sofia",value:"(UTC+02:00) Sofia"},{key:"Europe/Tallinn",value:"(UTC+02:00) Tallinn"},{key:"Europe/Vilnius",value:"(UTC+02:00) Vilnius"},{key:"Asia/Baghdad",value:"(UTC+03:00) Baghdad"},{key:"Asia/Kuwait",value:"(UTC+03:00) Kuwait"},{key:"Europe/Minsk",value:"(UTC+03:00) Minsk"},{key:"Africa/Nairobi",value:"(UTC+03:00) Nairobi"},{key:"Asia/Riyadh",value:"(UTC+03:00) Riyadh"},{key:"Europe/Volgograd",value:"(UTC+03:00) Volgograd"},{key:"Asia/Tehran",value:"(UTC+03:30) Tehran"},{key:"Asia/Muscat",value:"(UTC+04:00) Abu Dhabi"},{key:"Asia/Baku",value:"(UTC+04:00) Baku"},{key:"Europe/Moscow",value:"(UTC+04:00) Moscow"},{key:"Asia/Muscat",value:"(UTC+04:00) Muscat"},{key:"Europe/Moscow",value:"(UTC+04:00) St. Petersburg"},{key:"Asia/Tbilisi",value:"(UTC+04:00) Tbilisi"},{key:"Asia/Yerevan",value:"(UTC+04:00) Yerevan"},{key:"Asia/Kabul",value:"(UTC+04:30) Kabul"},{key:"Asia/Karachi",value:"(UTC+05:00) Islamabad"},{key:"Asia/Karachi",value:"(UTC+05:00) Karachi"},{key:"Asia/Tashkent",value:"(UTC+05:00) Tashkent"},{key:"Asia/Calcutta",value:"(UTC+05:30) Chennai"},{key:"Asia/Kolkata",value:"(UTC+05:30) Kolkata"},{key:"Asia/Calcutta",value:"(UTC+05:30) Mumbai"},{key:"Asia/Calcutta",value:"(UTC+05:30) New Delhi"},{key:"Asia/Calcutta",value:"(UTC+05:30) Sri Jayawardenepura"},{key:"Asia/Katmandu",value:"(UTC+05:45) Kathmandu"},{key:"Asia/Almaty",value:"(UTC+06:00) Almaty"},{key:"Asia/Dhaka",value:"(UTC+06:00) Astana"},{key:"Asia/Dhaka",value:"(UTC+06:00) Dhaka"},{key:"Asia/Yekaterinburg",value:"(UTC+06:00) Ekaterinburg"},{key:"Asia/Rangoon",value:"(UTC+06:30) Rangoon"},{key:"Asia/Bangkok",value:"(UTC+07:00) Bangkok"},{key:"Asia/Bangkok",value:"(UTC+07:00) Hanoi"},{key:"Asia/Jakarta",value:"(UTC+07:00) Jakarta"},{key:"Asia/Novosibirsk",value:"(UTC+07:00) Novosibirsk"},{key:"Asia/Hong_Kong",value:"(UTC+08:00) Beijing"},{key:"Asia/Chongqing",value:"(UTC+08:00) Chongqing"},{key:"Asia/Hong_Kong",value:"(UTC+08:00) Hong Kong"},{key:"Asia/Krasnoyarsk",value:"(UTC+08:00) Krasnoyarsk"},{key:"Asia/Kuala_Lumpur",value:"(UTC+08:00) Kuala Lumpur"},{key:"Australia/Perth",value:"(UTC+08:00) Perth"},{key:"Asia/Singapore",value:"(UTC+08:00) Singapore"},{key:"Asia/Taipei",value:"(UTC+08:00) Taipei"},{key:"Asia/Ulan_Bator",value:"(UTC+08:00) Ulaan Bataar"},{key:"Asia/Urumqi",value:"(UTC+08:00) Urumqi"},{key:"Asia/Irkutsk",value:"(UTC+09:00) Irkutsk"},{key:"Asia/Tokyo",value:"(UTC+09:00) Osaka"},{key:"Asia/Tokyo",value:"(UTC+09:00) Sapporo"},{key:"Asia/Seoul",value:"(UTC+09:00) Seoul"},{key:"Asia/Tokyo",value:"(UTC+09:00) Tokyo"},{key:"Australia/Adelaide",value:"(UTC+09:30) Adelaide"},{key:"Australia/Darwin",value:"(UTC+09:30) Darwin"},{key:"Australia/Brisbane",value:"(UTC+10:00) Brisbane"},{key:"Australia/Canberra",value:"(UTC+10:00) Canberra"},{key:"Pacific/Guam",value:"(UTC+10:00) Guam"},{key:"Australia/Hobart",value:"(UTC+10:00) Hobart"},{key:"Australia/Melbourne",value:"(UTC+10:00) Melbourne"},{key:"Pacific/Port_Moresby",value:"(UTC+10:00) Port Moresby"},{key:"Australia/Sydney",value:"(UTC+10:00) Sydney"},{key:"Asia/Yakutsk",value:"(UTC+10:00) Yakutsk"},{key:"Asia/Vladivostok",value:"(UTC+11:00) Vladivostok"},{key:"Pacific/Auckland",value:"(UTC+12:00) Auckland"},{key:"Pacific/Fiji",value:"(UTC+12:00) Fiji"},{key:"Pacific/Kwajalein",value:"(UTC+12:00) International Date Line West"},{key:"Asia/Kamchatka",value:"(UTC+12:00) Kamchatka"},{key:"Asia/Magadan",value:"(UTC+12:00) Magadan"},{key:"Pacific/Fiji",value:"(UTC+12:00) Marshall Is."},{key:"Asia/Magadan",value:"(UTC+12:00) New Caledonia"},{key:"Asia/Magadan",value:"(UTC+12:00) Solomon Is."},{key:"Pacific/Auckland",value:"(UTC+12:00) Wellington"},{key:"Pacific/Tongatapu",value:"(UTC+13:00) Nuku'alofa"}],this.getTimezones=function(){return this.timezones},this.getTimezoneDescription=function(a){var b=this,c=_.filter(b.timezones,{key:a});return c?_.isArray(c)?c[0]:c:void 0}}),angular.module("common").service("TransformerUtils",function(){this.copyKeysFromTo=function(a,b,c){_.each(_.keys(a),function(d){c&&_.contains(c,d)||(b[d]=a[d])})},this.sanitizeRecipients=function(a){return _.uniq(a,"email")}}),angular.module("feedback",[]),angular.module("feedback").constant("FEEDBACK_URLS",{feedback:"feedback/send"}),angular.module("feedback").controller("FeedbackModalController",["$scope","FeedbackModalService","Feedback","$timeout",function(a,b,c,d){a.feedback=new c,a.isSending=!1,a.isSent=!1,a.openFeedbackModal=function(){b.open(),b.modalInstance.opened.then(function(){a.isModalOpened=!0})},a.dismissFeedbackModal=function(){b.modalInstance.dismiss("cancel"),a.isModalOpened=!1},a.sendFeedbackAndClose=function(c){c.$valid&&!a.isSending&&(a.isSending=!0,a.feedback.send().then(function(){a.isSent=!0,d(function(){a.isSending=!1,b.modalInstance.close()},2500)})["catch"](function(){a.isSending=!1,alert("Something went wrong. Please try again.")})["finally"](function(){a.isModalOpened=!1,a.isSending=!1}))}}]),angular.module("feedback").factory("Feedback",["FeedbackService",function(a){function b(){this.model={subject:"",message:""},this.send=function(){return a.sendFeedback(this)}}return b.build=function(){return new b},b}]),angular.module("feedback").service("FeedbackModalService",["$modal",function(a){this.modalInstance=null,this.open=function(){this.modalInstance=a.open({templateUrl:"app/feedback/partials/feedback-modal.html",controller:"FeedbackModalController",windowClass:"modal-feedback"})}}]),angular.module("feedback").service("FeedbackService",["FEEDBACK_URLS","$http",function(a,b){this.sendFeedback=function(c){return b.post(URLTo.api(a.feedback),{subject:c.model.subject,message:c.model.message})}}]),angular.module("account",["common","currencies","categories"]).config(["$stateProvider","$httpProvider",function(a,b){b.interceptors.push("AuthInterceptor"),a.state("account",{url:"/account",controller:"LoginController",templateUrl:"app/site/partials/home.html",title:"Login - Revaluate",isPublicPage:!0}).state("settings",{url:"/account/settings",views:{"":{templateUrl:"app/account/partials/settings/settings.html"},"profile@settings":{templateUrl:"app/account/partials/settings/settings.profile.html"},"preferences@settings":{templateUrl:"app/account/partials/settings/settings.preferences.html"}},title:"Settings - Revaluate"}).state("account:logout",{url:"/account/logout",controller:"LogoutController",templateUrl:"app/account/partials/logout.html",resolve:{isSuccessfullyLoggedOut:["$q","AuthService",function(a,b){return b.logout(),!0}]},title:"Logout - Revaluate",isPublicPage:!0}).state({name:"account:validatePasswordResetToken",url:"/account/reset-password",templateUrl:"app/account/partials/validate_password_reset_token_abstract.html","abstract":!0}).state({name:"account:validatePasswordResetToken.valid",url:"/{email}/{token}",templateUrl:"app/account/partials/validate_password_reset_token_valid.html",controller:"ValidatePasswordResetTokenController",resolve:{validateTokenResult:["$stateParams","$q","AuthService","$state",function(a,b,c,d){var e=b.defer();return c.validatePasswordResetToken(a.email,a.token).then(function(b){return e.resolve({email:a.email,token:a.token}),b})["catch"](function(a){return d.go("account:validatePasswordResetToken.invalid"),a}),e.promise}]},title:"Reset password - Revaluate",isPublicPage:!0}).state({name:"account:validatePasswordResetToken.invalid",url:"/invalid-token",templateUrl:"app/account/partials/validate_password_reset_token_invalid.html",controller:"ValidatePasswordResetTokenInvalidController",title:"Reset password - Revaluate",isPublicPage:!0}).state("setup",{url:"/setup",templateUrl:"app/account/partials/signup_setup.html",controller:"SignUpSetUpRegistrationController",title:"Setup - Revaluate",resolve:{currencies:["CurrencyService",function(a){return a.getAllCurrencies()}],predefinedCategories:["CategoriesSetupProvider",function(a){return a.getCategories()}]}})}]).run(["$rootScope","AuthFilter",function(a,b){a.$on("$stateChangeStart",b)}]),angular.module("account").constant("AUTH_EVENTS",{isLoggedIn:"auth-is-logged-in",loginSuccess:"auth-login-success",refreshUser:"auth-refresh-user",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("AUTH_URLS",{login:"account/login",logout:"account/logout",currentUser:"account/user",auth:"account",create:"account",update:"account",details:"account",requestPasswordReset:"account/requestResetPassword/:email",resetPasswordWithToken:"account/resetPassword/:email/:token",validatePasswordResetToken:"account/validateResetPasswordToken/:email/:token",updatePassword:"account/updatePassword",refreshToken:"auth/refresh_token",validateRegistrationToken:"account/validate_email_verification_token/:email/:token",requestSignUpRegistration:"account/send_email_verification_token"}).constant("ACCOUNT_FORM_STATE",{login:"login",logout:"logout",signUp:"signUp",signUpSuccessfully:"signUpSuccessfully",forgotPassword:"forgotPassword",forgotPasswordEmailSent:"forgotPasswordEmailSent",requestSignUpRegistration:"requestSignUpRegistration",updateProfile:"updateProfile",resetPassword:"resetPassword",resetPasswordSuccessfully:"resetPasswordSuccessfully",updatePassword:"updatePassword",updatePasswordSuccessfully:"updatePasswordSuccessfully"}).constant("AUTH_TOKEN_HEADER","authtoken"),angular.module("account").constant("USER_URLS",{userUnique:"account/isUniqueEmail"}),angular.module("account").controller("ForgotPasswordController",["$state","$scope","flash","ALERTS_CONSTANTS","AuthService","AUTH_EVENTS","ACCOUNT_FORM_STATE","AccountModal",function(a,b,c,d,e,f,g,h){b.alertIdentifierId=d.forgotPassword,b.forgotPasswordData={email:""},b.requestPasswordReset=function(){b.forgotPasswordForm.$valid&&e.requestPasswordReset(b.forgotPasswordData.email).then(function(){h.setState(g.forgotPasswordEmailSent)})["catch"](function(){b.badPostSubmitResponse=!0,c.to(b.alertIdentifierId).error="This email does not exist in our database."})}}]),angular.module("account").controller("HomeSignUpRegistrationController",["$scope","$timeout","flash","ALERTS_CONSTANTS","StatesHandler","User","AuthService","MIXPANEL_EVENTS",function(a,b,c,d,e,f,g,h){a.alertIdentifierId=d.signUpConfirm,a.signUpData={firstName:"",lastName:"",password:"",email:"",currency:{currencyCode:"EUR"}},a.signUp=function(b){a.signUpForm.$valid&&!a.isRequestPending&&(a.isRequestPending=!0,f.$new().$create(b).then(function(){mixpanel.track(h.signUpCompleted),g.login(b.email,b.password).then(function(){a.isRequestPending=!1,e.goToSetUp()})})["catch"](function(){a.badPostSubmitResponse=!0,a.isRequestPending=!1,c.to(a.alertIdentifierId).error="Sorry, something went wrong."}))}}]),angular.module("account").controller("LoginController",["$scope","flash","ALERTS_CONSTANTS","AuthService","AUTH_EVENTS","ACCOUNT_FORM_STATE","AccountModal","StatesHandler","$timeout",function(a,b,c,d,e,f,g,h,i){a.alertIdentifierId=c.login,g.isOpen||g.openWithState(f.login);var j=300;a.loginData={email:"",password:""},a.login=function(c){a.loginForm.$valid&&!a.isRequestPending&&(a.isRequestPending=!0,d.login(c.email,c.password).then(function(){h.goToExpenses()})["catch"](function(){a.badPostSubmitResponse=!0,b.to(a.alertIdentifierId).error="Your email or password are wrong. Please try again."})["finally"](function(){i(function(){a.isRequestPending=!1},j)}))}}]),angular.module("account").controller("LogoutController",["$scope","$timeout","StatesHandler","isSuccessfullyLoggedOut",function(a,b,c,d){a.isSuccessfullyLoggedOut=d,b(function(){c.goHome()},1500)}]),angular.module("account").controller("PreferencesController",["$q","$scope","$rootScope","TimezoneProvider","flash","ALERTS_CONSTANTS",function(a,b,c,d,e,f){b.alertIdentifierId=f.preferences,b.user=c.currentUser,b.preferencesData={firstName:b.user.model.firstName,lastName:b.user.model.lastName,email:b.user.model.email,timezone:b.user.model.timezone,currency:b.user.model.currency},b.timezones=d.getTimezones(),b.updatePreferences=function(a){b.preferencesForm.$valid&&b.user.$save(a).then(function(){b.preferencesForm.$setPristine(),e.to(b.alertIdentifierId).success="We've successfully updated your preferences!"})["catch"](function(){e.to(b.alertIdentifierId).error="We've encountered an error while trying to update your preferences."})}}]),angular.module("account").controller("ProfileController",["$q","$scope","$rootScope","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE","flash","ALERTS_CONSTANTS","MIXPANEL_EVENTS",function(a,b,c,d,e,f,g,h,i){b.alertIdentifierId=h.updateProfile,mixpanel.track(i.settings),e.setState(f.updateProfile),b.user=c.currentUser,b.profileData={firstName:b.user.model.firstName,lastName:b.user.model.lastName,timezone:b.user.model.timezone},b.updateProfile=function(a){b.profileForm.$valid&&b.user.$save(a).then(function(){b.user.$refresh().then(function(){b.profileForm.$setPristine(),g.to(b.alertIdentifierId).success="We've successfully updated your account!"})})["catch"](function(){g.to(b.alertIdentifierId).error="We've encountered an error while trying to update your account."})},b.getMeBack=function(){d.goToExpenses()}}]),angular.module("account").controller("SignUpSetUpRegistrationController",["$q","$rootScope","$scope","$timeout","flash","AuthService","CategoryService","AUTH_EVENTS","ALERTS_CONSTANTS","predefinedCategories","CategoryColorService","SessionService","StatesHandler","Category","currencies",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){function p(){c.showCategoryOnTheFlyInput=!1,c.categoryOnTheFly="",c.setUpForm.categoryOnTheFlyForm.$setPristine(),c.badPostSubmitResponse=!1,e.to(c.alertIdentifierId).error=""}function q(){return _.filter(c.categories,"selected",!0)}c.currencies=o,c.alertIdentifierId=i.signUpSetUp,c.user=b.currentUser,c.currency={};var r=300;c.categories=j,c.categoryOnTheFly="",c.showCategoryOnTheFlyInput=!1,c.toggleContent=function(){c.showCategoryOnTheFlyInput=!c.showCategoryOnTheFlyInput},c.triggerSubmit=function(){c.$broadcast("add-category-on-the-fly-event")},c.cancelAddCategoryOnTheFly=function(){p()},c.onSubmitted=function(a){if(a.stopPropagation(),c.setUpForm.categoryOnTheFlyForm.$submitted=!0,!c.setUpForm.categoryOnTheFlyForm.$invalid){var b=_.some(c.categories,function(a){return a.name===c.categoryOnTheFly;

});b?e.to(c.alertIdentifierId).error="Category is not unique":(c.categories.push({name:c.categoryOnTheFly,color:k.randomizedColor().color,selected:!0}),p())}},c.toggleCategorySelection=function(a){c.categories[a].selected=!c.categories[a].selected};var s=3;c.isEnoughSelectedCategories=function(){return q().length>=s},c.setUp=function(){if(!c.setUpForm.$invalid&&!c.isSaving){var f=angular.copy(q()),i={currency:angular.copy(c.currency.originalObject),initiated:!0},j=_.map(f,function(a){return n.build(a)}),k=a.defer();c.isSaving=!0,g.bulkCreate(j).then(function(){c.user.$save(i).then(function(a){k.resolve(a)})["catch"](function(a){return k.reject(a)})})["catch"](function(a){return k.reject(a)}),k.promise.then(function(a){d(function(){l.setData(a.data),b.$broadcast(h.refreshUser,a),c.isSaving=!1,e.to(c.alertIdentifierId).success="Set up successfully! Preparing expenses..",m.goToExpenses()},r)})["catch"](function(){c.isSaving=!1,e.to(c.alertIdentifierId).error="Set up could not have been performed.",c.badPostSubmitResponse=!0})}}}]),angular.module("account").controller("UpdatePasswordController",["$scope","flash","AuthService","ACCOUNT_FORM_STATE","ALERTS_CONSTANTS","ProfileFormToggle",function(a,b,c,d,e,f){a.alertIdentifierId=e.updatePassword,a.updatePasswordData={oldPassword:"",newPassword:"",newPasswordConfirmation:""},a.updatePassword=function(e){a.updatePasswordForm.$valid&&c.updatePassword(e.oldPassword,e.newPassword,e.newPasswordConfirmation).then(function(){f.setState(d.updatePasswordSuccessfully)})["catch"](function(c){a.badPostSubmitResponse=!0,b.to(a.alertIdentifierId).error=c.data&&c.data.errors&&c.data.errors[0]})}}]),angular.module("account").controller("ValidatePasswordResetTokenController",["$scope","$timeout","flash","AuthService","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE","validateTokenResult","ALERTS_CONSTANTS",function(a,b,c,d,e,f,g,h,i){a.alertIdentifierId=i.validatePassword,a.resetPasswordData={email:h.email,password:"",passwordConfirmation:"",token:h.token},a.resetPassword=function(h){a.resetPasswordForm.$valid&&d.resetPasswordWithToken(h.email,h.password,h.passwordConfirmation,h.token).then(function(){a.successfullyReseted=!0,f.setState(g.resetPasswordSuccessfully),d.login(h.email,h.password).then(function(){b(function(){e.goToExpenses()},1500)})})["catch"](function(){a.badPostSubmitResponse=!0,c.to(a.alertIdentifierId).error="Sorry, something went wrong."})}}]),angular.module("account").controller("ValidatePasswordResetTokenInvalidController",["$scope","AuthService","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE",function(a,b,c,d,e){a.isUserAuthenticated=b.isAuthenticated(),a.continueToResetPassword=function(){a.isUserAuthenticated&&b.logout(),d.setState(e.forgotPassword),c.goToLogin()}}]),angular.module("account").directive("accountModalClose",["AccountModal",function(a){return{restrict:"A",templateUrl:"app/account/partials/account_close.html",link:function(b,c){c.on("click",function(){a.close()})}}}]),angular.module("account").directive("accountModalToggle",["AccountModal",function(a){return{restrict:"A",link:function(b,c,d){c.on("click",function(){a.openWithState(d.accountModalToggle)})}}}]),angular.module("account").directive("accountModal",["$rootScope","$animate","ACCOUNT_FORM_STATE","AccountModal",function(a,b,c,d){return{restrict:"A",templateUrl:"app/account/partials/account.html",link:function(e,f){e.ACCOUNT_FORM_STATE=c,e.user=a.currentUser,e.AccountModal=d;var g="account-modal--open";e.$watch("AccountModal.isOpen",function(a,c){a===!0?b.addClass(f,g):a===!1&&c===!0&&b.removeClass(f,g)})}}}]),angular.module("account").directive("profileFormToggle",["ProfileFormToggle","ACCOUNT_FORM_STATE",function(a,b){return{restrict:"A",link:function(c){c.ProfileFormToggle=a,c.ACCOUNT_FORM_STATE=b}}}]),angular.module("account").directive("strongPassword",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return!!a&&a.length>=7}d.$validators.strongPassword=function(a){return e(a)}}}}),angular.module("account").directive("uniqueEmail",["$q","$timeout","UserService",function(a,b,c){return{require:"ngModel",scope:{ngModel:"="},link:function(a,b,d,e){function f(a){return/[^\s@]+@[^\s@]+\.[^\s@]+/.test(a)}a.$watch("ngModel",function(a){f(a)&&c.isUnique(a).then(function(a){a.email===e.$viewValue&&e.$setValidity("uniqueEmail",a.isUnique)})})}}}]),angular.module("account").directive("validEmail",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return/[^\s@]+@[^\s@]+\.[^\s@]+/.test(a)}d.$validators.validEmail=function(a){return e(a)}}}}),angular.module("account").service("AccountModal",["$rootScope","$timeout","AUTH_EVENTS",function(a,b,c){this.isOpen=!1,this.state=null,this.open=function(){b(_.bind(function(){this.isOpen=!0},this))},this.close=function(){b(_.bind(function(){this.isOpen=!1},this))},this.setState=function(a){b(_.bind(function(){this.state=a},this))},this.openWithState=function(a){this.setState(a),this.open()},a.$on(c.loginSuccess,_.bind(function(){this.close()},this))}]),angular.module("account").value("redirectToUrlAfterLogin",{url:void 0}),angular.module("account").service("AuthService",["$rootScope","$q","$http","$location","redirectToUrlAfterLogin","SessionService","AUTH_EVENTS","AUTH_URLS","AUTH_TOKEN_HEADER",function(a,b,c,d,e,f,g,h,i){this.isAuthenticated=function(){return f.sessionExists()},this.login=function(d,e){return c.post(URLTo.api(h.login),{email:d,password:e}).then(function(b){return f.create(b.data,b.headers()[i]),a.$broadcast(g.loginSuccess,b),b})["catch"](function(c){return f.destroy(),a.$broadcast(g.loginFailed,c),b.reject(c)})},this.logout=function(){f.destroy(),a.$broadcast(g.logoutSuccess)},this.requestPasswordReset=function(a){return c.post(URLTo.api(h.requestPasswordReset,{":email":a}))},this.requestSignUpRegistration=function(a){return c.post(URLTo.api(h.requestSignUpRegistration),{email:a})},this.resetPasswordWithToken=function(a,b,d,e){return c.post(URLTo.api(h.resetPasswordWithToken,{":email":a,":token":e}),{password:b,passwordConfirmation:d},{skipAuthorization:!0}).then(function(a){return a.data})},this.validatePasswordResetToken=function(a,b){return c.post(URLTo.api(h.validatePasswordResetToken,{":email":a,":token":b}),{skipAuthorization:!0}).then(function(a){return a.data})},this.validateRegistrationToken=function(a,b){return c.post(URLTo.api(h.validateRegistrationToken,{":email":a,":token":b}),{skipAuthorization:!0}).then(function(a){return a.data})},this.updatePassword=function(a,b,d){return c.put(URLTo.api(h.updatePassword),{oldPassword:a,newPassword:b,newPasswordConfirmation:d}).then(function(a){return a.data})},this.saveAttemptUrl=function(){"/account"!==d.path().toLowerCase()&&(e.url=d.path())},this.redirectToAttemptedUrl=function(){e.url&&(d.path(e.url),e.url=void 0)}}]),angular.module("account").service("AuthFilter",["AuthService","StatesHandler","User",function(a,b,c){return function(d,e){"/account"!==e.url&&"home"!==e.name||!a.isAuthenticated()?a.isAuthenticated()||e.isPublicPage?e.url.indexOf("/setup")>-1&&a.isAuthenticated()&&c.$new().loadFromSession().isInitiated()?(d.preventDefault(),b.goToExpenses()):e.isPublicPage||-1!==e.url.indexOf("/setup")||!a.isAuthenticated()||c.$new().loadFromSession().isInitiated()||(d.preventDefault(),b.goToSetUp()):(d.preventDefault(),a.saveAttemptUrl(),b.goToLogin()):(d.preventDefault(),b.goToExpenses())}}]),angular.module("account").factory("AuthInterceptor",["$rootScope","$q","SessionService","AUTH_EVENTS",function(a,b,c,d){return{responseError:function(c){return 401===c.status&&a.$broadcast(d.notAuthenticated,c),403===c.status&&a.$broadcast(d.notAuthorized,c),(419===c.status||440===c.status)&&a.$broadcast(d.sessionTimeout,c),b.reject(c)}}}]),angular.module("account").service("ProfileFormToggle",["ACCOUNT_FORM_STATE",function(a){this.state=a.updateProfile,this.setState=function(a){this.state=a}}]),angular.module("account").service("UserService",["$http","$q","USER_URLS",function(a,b,c){this.uniqueEmailCache={},this.isUnique=function(d){var e=b.defer();return _.isUndefined(this.uniqueEmailCache[d])?a.get(URLTo.api(c.userUnique),{params:{email:d}}).then(_.bind(function(a){this.uniqueEmailCache[d]=a.data.isUnique,e.resolve({isUnique:!0,email:d})},this))["catch"](function(){e.resolve({isUnique:!1,email:d})}):e.resolve({isUnique:this.uniqueEmailCache[d],email:d}),e.promise},this.resetUniqueEmailCache=function(){this.uniqueEmailCache={}}}]),angular.module("account").factory("User",["SessionService","TransformerUtils","$q","$http","AUTH_URLS",function(a,b,c,d,e){return{$new:function(){return{model:{userId:"",firstName:"",lastName:"",email:"",password:"",timezone:"",initiated:!1,helpdeskAuthToken:"",currency:{currencyCode:""}},isAuthenticated:function(){return a.sessionExists()},isInitiated:function(){return this.isAuthenticated()&&this.model.initiated},loadFromSession:function(){return b.copyKeysFromTo(a.getData()||{},this.model),this},saveToSession:function(){var c={};return b.copyKeysFromTo(this,c,["password"]),a.setData(c),this},$save:function(a){var c={};return b.copyKeysFromTo(a,c),this.updateAccount(c)},$create:function(a){var c={};return b.copyKeysFromTo(a,c),this.createAccount(c)},$refresh:function(){var a=this;return this.retrieveDetails().then(function(c){return b.copyKeysFromTo(c.data,a),a.saveToSession(),c})["catch"](function(a){return c.reject(a)})},retrieveDetails:function(){return d.get(URLTo.api(e.details))},createAccount:function(a){return d.post(URLTo.api(e.create),a,{skipAuthorization:!0}).then(function(a){return a.data})},updateAccount:function(a){return d.put(URLTo.api(e.update),a)}}}}}]),angular.module("site",["common"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/404"),a.state("home",{url:"/",templateUrl:"app/site/partials/home.html",controller:"LandingPageController",title:"Change the way you spend your money",isPublicPage:!0}).state("privacy",{url:"/privacy",templateUrl:"app/site/partials/privacy.html",title:"Privacy - Revaluate",isPublicPage:!0}).state("about",{url:"/about",templateUrl:"app/site/partials/about.html",title:"About - Revaluate",isPublicPage:!0}).state("404",{url:"/404",templateUrl:"app/site/partials/404.html",controller:"Error404PageController",title:"Hmm... looks like a 404",isPublicPage:!0}).state("500",{url:"/500",templateUrl:"app/site/partials/500.html",controller:"Error500PageController",title:"Oops... You found a 500",isPublicPage:!0})}]),angular.module("common").controller("AbstractErrorPageController",["$scope","StatesHandler",function(a,b){a.trackErrorEvent=function(a){mixpanel.track(a)},a.goToHomePage=function(){b.goHome()}}]),angular.module("common").controller("Error404PageController",["$scope","$controller","MIXPANEL_EVENTS",function(a,b,c){b("AbstractErrorPageController",{$scope:a}),a.trackErrorEvent(c.error404)}]),angular.module("common").controller("Error500PageController",["$scope","$controller","MIXPANEL_EVENTS",function(a,b,c){b("AbstractErrorPageController",{$scope:a}),a.trackErrorEvent(c.error500)}]),angular.module("common").controller("LandingPageController",["$state","$scope","ACCOUNT_FORM_STATE","MIXPANEL_EVENTS",function(a,b,c,d){mixpanel.track(d.landingPageLoaded)}]),angular.module("currencies",["common"]),angular.module("currencies").constant("CURRENCY_URLS",{allCurrencies:"currency/list"}),angular.module("currencies").service("CurrencyService",["CURRENCY_URLS","$q","$http",function(a,b,c){this.getAllCurrencies=function(){return c.get(URLTo.api(a.allCurrencies)).then(function(a){return a.data})["catch"](function(a){return b.reject(a)})}}]),angular.module("categories",["common"]).config(["$stateProvider",function(a){a.state("categories",{url:"/categories",templateUrl:"app/categories/partials/categories.html",controller:"CategoryListController",resolve:{categories:["CategoryService",function(a){return a.getAllCategories()}]},title:"Categories - Revaluate"})}]),angular.module("categories").constant("CATEGORY_URLS",{isUnique:"categories/isUniqueCategory",create:"categories",update:"categories","delete":"categories/:id",bulkDelete:"categories/bulkDelete",bulkCreate:"categories/bulkCreate",allCategories:"categories/retrieve"}).constant("CATEGORY_EVENTS",{isErrorOccurred:"category-error-occurred",isCreated:"category-is-created",isDeleted:"category-is-deleted",isUpdated:"category-is-updated"}),angular.module("categories").controller("CategoryCreateController",["$scope","$rootScope","CategoryColorService","Category","$timeout","CATEGORY_EVENTS","MIXPANEL_EVENTS",function(a,b,c,d,e,f,g){var h=300;a.initOrReset=function(b){a.category=d.build({color:c.randomizedColor().color}),b&&b.$setPristine(),a.badPostSubmitResponse=!1},a.initOrReset(),a.saveCategory=function(c){c.$valid&&!a.isSaving&&(a.isSaving=!0,a.category.save().then(function(){mixpanel.track(g.categoryCreated),e(function(){a.isSaving=!1,b.$broadcast(f.isCreated,{category:a.category}),a.initOrReset(c)},h)})["catch"](function(){a.isSaving=!1,a.badPostSubmitResponse=!0,b.$broadcast(f.isErrorOccurred,{})}))}}]),angular.module("categories").controller("CategoryEditRemoveController",["$scope","$rootScope","Category","$timeout","CATEGORY_EVENTS","MIXPANEL_EVENTS",function(a,b,c,d,e,f){var g=300;a.updateCategory=function(c,h){c.$valid&&!a.isUpdating&&(a.isUpdating=!0,h.save().then(function(){mixpanel.track(f.categoryCreated),d(function(){a.isUpdating=!1,b.$broadcast(e.isUpdated,{category:h})},g)})["catch"](function(){a.isUpdating=!1,a.badPostSubmitResponse=!0,b.$broadcast(e.isErrorOccurred,{})}))},a.deleteCategory=function(c){a.isDeleting||(a.isDeleting=!0,c.destroy().then(function(){mixpanel.track(f.categoryDeleted),b.$broadcast(e.isDeleted,{category:c})})["catch"](function(){a.isDeleting=!1,b.$broadcast(e.isErrorOccurred,{})}))}}]),angular.module("categories").controller("CategoryListController",["$scope","$rootScope","Category","flash","CATEGORY_EVENTS","$timeout","categories","MIXPANEL_EVENTS","ALERTS_CONSTANTS",function(a,b,c,d,e,f,g,h,i){function j(a,b){return _.remove(a,function(a){var c=_.parseInt(b.model.id,10),d=_.parseInt(a.model.id,10);return _.isNaN(d)||_.isNaN(c)?!1:d===c})}a.alertIdentifierId=i.createUpdateCategory,mixpanel.track(h.categoriesPage),a.user=b.currentUser,a.categories=g,a.$on(e.isErrorOccurred,function(){d.to(a.alertIdentifierId).error="This category cannot be deleted as one or more expenses exists with this category"}),a.$on(e.isCreated,function(b,c){a.categories.push(c.category),d.to(a.alertIdentifierId).success="Category successfully saved!"}),a.$on(e.isUpdated,function(b,c){var e=_.some(a.categories,function(a){return a.model.id===c.category.model.id});e&&(j(a.categories,c.category),a.categories.push(c.category)),d.to(a.alertIdentifierId).success="Category successfully updated!"}),a.$on(e.isDeleted,function(b,c){j(a.categories,c.category),d.to(a.alertIdentifierId).success="Category successfully deleted!"})}]),angular.module("categories").directive("addCategory",["$rootScope","CATEGORY_EVENTS",function(a,b){return{restrict:"A",controller:"CategoryCreateController",templateUrl:"app/categories/partials/add-category-directive-template.html",link:function(c,d,e){c.showContent=!1,c.toggleContent=function(){c.showContent=!c.showContent},a.$on(b.isCreated,function(){c.toggleContent()})}}}]),angular.module("categories").directive("colorPicker",["CATEGORY_EVENTS","CategoryColorService","$timeout","$animate",function(a,b,c,d){return{restrict:"A",replace:!0,scope:{categoryColor:"="},templateUrl:"app/categories/partials/color-picker-directive-template.html",link:function(a,c,e){a.isOpen=!1,a.open=function(){a.isOpen=!0},a.close=function(){a.isOpen=!1};var f=c.prev("input");f.on("focus",function(){a.$apply(function(){a.open()})}),f.on("blur",function(){a.$apply(function(){a.close()})});var g="color-picker-box--open";a.$watch("isOpen",function(a,b){a===!0?d.addClass(c,g):a===!1&&b===!0&&d.removeClass(c,g)}),a.colors=b.getColorsPool(),a.select=function(b){a.categoryColor=b.color,a.close()}}}}]),angular.module("categories").directive("editRemoveCategory",["$rootScope","CATEGORY_EVENTS",function(a,b){return{restrict:"A",controller:"CategoryEditRemoveController",scope:{category:"="},templateUrl:"app/categories/partials/edit-remove-category-directive-template.html",link:function(c,d,e){c.masterCategory=angular.copy(c.category),c.showContent=!1,c.toggleContent=function(){c.showContent=!c.showContent},c.cancel=function(){c.toggleContent(),c.category=angular.copy(c.masterCategory)},a.$on(b.isUpdated,function(a,b){c.category.model.id===b.category.model.id&&(c.toggleContent(),c.masterCategory=angular.copy(c.category))}),c.$on(b.isDeleted,function(a,b){c.category.model.id===b.category.model.id&&c.toggleContent()})}}}]),angular.module("categories").directive("uniqueCategoryName",["$q","CategoryService",function(a,b){return{require:"ngModel",scope:{ngModel:"=",except:"="},link:function(a,c,d,e){function f(a){return/^([A-Za-z\d\s]){2,20}$/.test(a)}a.$watch("ngModel",function(c){f(c)&&e.$viewValue!==a.except&&b.isUnique(c).then(function(a){a.name===e.$viewValue&&e.$setValidity("uniqueCategoryName",a.isUnique)})})}}}]),angular.module("categories").directive("validCategoryColor",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)}d.$validators.validCategoryColor=function(a){return e(a)}}}}),angular.module("categories").directive("validCategoryName",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return/^([A-Za-z\d\s!@#\$%\^&*\)\(+=._-]){2,30}$/.test(a)}d.$validators.validCategoryName=function(a){return e(a)}}}}),angular.module("categories").service("CategoriesSetupProvider",function(){this.categories=[{name:"Bills",color:"#8471B1",selected:!1},{name:"Food",color:"#826274",selected:!1},{name:"Clothes",color:"#8471B1",selected:!1},{name:"Car",color:"#FFDD00",selected:!1},{name:"Donations",color:"#826274",selected:!1},{name:"Hobby",color:"#FFDD00",selected:!1},{name:"Health",color:"#826274",selected:!1},{name:"Education",color:"#8471B1",selected:!1},{name:"Investments",color:"#8471B1",selected:!1},{name:"House",color:"#8471B1",selected:!1},{name:"Entertainment",color:"#8471B1",selected:!1}],this.getCategories=function(){return this.categories}}),angular.module("categories").service("CategoryColorService",function(){var a=[{color:"#C3272B"},{color:"#DB5A6B"},{color:"#875F9A"},{color:"#22A7F0"},{color:"#317589"},{color:"#1F4788"},{color:"#006442"},{color:"#26A65B"},{color:"#36D7B7"},{color:"#FFB61E"},{color:"#CA6924"},{color:"#6C7A89"},{color:"#121212"},{color:"#BDC3C7"}];return{randomizedColor:function(){return a[Math.floor(Math.random()*a.length)]},getColorsPool:function(){return a},generateColor:function(){return"#"+Math.floor(16777215*Math.random()).toString(16)}}}),angular.module("categories").service("CategoryService",["CATEGORY_URLS","$q","$http","CategoryTransformerService",function(a,b,c,d){this.createCategory=function(b){return c.post(URLTo.api(a.create),d.toCategoryDto(b)).then(function(a){return d.toCategory(a.data,b),a})},this.updateCategory=function(b){var e=d.toCategoryDto(b);return c.put(URLTo.api(a.update),e).then(function(a){return d.toCategory(a.data,b),a})},this.deleteCategory=function(b){var e=d.toCategoryDto(b);return c["delete"](URLTo.api(a["delete"],{":id":e.id}),e).then(function(a){return d.toCategory(a.data,b),a.data})},this.getAllCategories=function(){return c.get(URLTo.api(a.allCategories)).then(function(a){return d.toCategories(a.data)})["catch"](function(a){return b.reject(a)})},this.bulkCreate=function(b){return c.post(URLTo.api(a.bulkCreate),d.toCategoryDTOs(b)).then(function(a){return d.toCategories(a.data)})},this.bulkDelete=function(b){return c.put(URLTo.api(a.bulkDelete),d.toCategoryDTOs(b)).then(function(a){return a.data})},this.isUnique=function(d){var e=b.defer();return c.get(URLTo.api(a.isUnique),{params:{name:d}}).then(_.bind(function(){e.resolve({isUnique:!0,name:d})},this))["catch"](function(){e.resolve({isUnique:!1,name:d})}),e.promise}}]),angular.module("categories").service("CategoryTransformerService",["$injector","TransformerUtils",function(a,b){this.toCategoryDto=function(a,c){var d={};return b.copyKeysFromTo(a.model,d,c),d},this.toCategory=function(c,d,e){return d=d||a.get("Category").build(),b.copyKeysFromTo(c,d.model,e),d},this.toCategories=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toCategory(a))},this)),b},this.toCategoryDTOs=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toCategoryDto(a))},this)),b}}]),angular.module("categories").factory("Category",["$q","$http","CategoryService","CategoryTransformerService",function(a,b,c,d){function e(){this.model={id:"",name:"",color:""},this.isNew=function(){return""===this.model.id||_.isUndefined(this.model.id)},this.save=function(){return this.isNew()?c.createCategory(this):c.updateCategory(this)},this.destroy=function(){return c.deleteCategory(this)}}return e.build=function(a){return _.isEmpty(a)?new e:d.toCategory(a,new e)},e}]),angular.module("expenses",["common"]).config(["$stateProvider",function(a){a.state("expenses",{url:"/expenses",templateUrl:"app/expenses/partials/expense/expenses.template.html","abstract":!0}).state("expenses.regular",{url:"",views:{expenses:{templateUrl:"app/expenses/partials/expense/expenses.html",controller:"ExpenseController",resolve:{expenses:["ExpenseService",function(a){return a.getAllExpenses()}],categories:["CategoryService",function(a){return a.getAllCategories()}]}}},title:"Expenses - Revaluate"})}]),angular.module("expenses").constant("EXPENSE_URLS",{create:"expenses",update:"expenses",details:"expenses/:id","delete":"expenses/:id",bulkDelete:"expenses/bulkDelete",allExpenses:"expenses/retrieve"}).constant("EXPENSE_EVENTS",{isCreated:"expense-is-created",isDeleted:"expense-is-deleted",isUpdated:"expense-is-updated"}),angular.module("expenses").controller("ExpenseController",["$scope","$rootScope","$stateParams","Expense","expenses","ExpenseService","categories","$window","DatesUtils","$timeout","StatesHandler","EXPENSE_EVENTS","flash","MIXPANEL_EVENTS","ALERTS_CONSTANTS",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){function p(){return _.filter(a.expenses,"marked",!0)}function q(a,b){return _.remove(a,function(a){var c=_.parseInt(b.model.id,10),d=_.parseInt(a.model.id,10);return _.isNaN(d)||_.isNaN(c)?!1:d===c})}function r(a,b){_.each(b,function(b){q(a,b)})}var s=300,t=1;a.alertIdentifierId=o.expenseList,mixpanel.track(n.expensesPage),a.searchByText="",a.user=b.currentUser,a.expenses=e,a.categories=g,a.initOrReset=function(b){a.$broadcast("angucomplete-alt:clearInput"),a.masterExpense=d.build({spentDate:moment().toDate()}),a.expense=angular.copy(a.masterExpense),a.category={},b&&b.$setPristine(),a.badPostSubmitResponse=!1,a.isSaving=!1,a.datePickerMaxDate=moment().hours(0).minutes(0).seconds(0)},a.datePickerMinDate=moment().year(2e3),a.initOrReset(),a.openDatePicker=function(b){b.preventDefault(),b.stopPropagation(),a.datePickerOpened=!0},a.saveExpense=function(){if(a.expenseForm.$valid&&!a.isSaving){var b=moment().diff(a.expense.model.spentDate||a.expenseForm.spentDate)<=0;if(b)return void a.expenseForm.spentDate.$setValidity("validDate",!1);a.isSaving=!0,a.expense.model.category=angular.copy(a.category.originalObject.model),angular.copy(a.expense,a.masterExpense),a.masterExpense.save().then(function(){mixpanel.track(n.expenseCreated);var b=angular.copy(a.masterExpense);j(function(){a.isSaving=!1,a.expenses.push(b)},s),a.initOrReset(a.expenseForm)})["catch"](function(){m.to(a.alertIdentifierId).error="Could not add expense.",a.isSaving=!1,a.badPostSubmitResponse=!0})}},a.isBulkActionEnabled=function(){return p().length>=t},a.cancelBulkAction=function(){var a=p();_.each(a,function(a){a.marked=!a.marked})},a.performBulkDelete=function(){if(!a.isBulkDeleting){var b=angular.copy(p());a.isBulkDeleting=!0,f.bulkDelete(b).then(function(){mixpanel.track(n.expenseDeleted),j(function(){r(a.expenses,b),a.isBulkDeleting=!1},s)})["catch"](function(){a.isBulkDeleting=!1,m.to(a.alertIdentifierId).error="Could not perform bulk action."})}},a.$on(l.isCreated,function(b,c){a.expenses.push(c.expense),m.to(a.alertIdentifierId).success="Expense successfully saved!"}),a.$on(l.isUpdated,function(b,c){var d=_.some(a.expenses,function(a){return a.model.id===c.expense.model.id});d&&(q(a.expenses,c.expense),a.expenses.push(c.expense)),m.to(a.alertIdentifierId).success="Expense successfully updated!"}),a.$on(l.isDeleted,function(b,c){q(a.expenses,c.expense),m.to(a.alertIdentifierId).success="Expense successfully deleted!"}),a.$on(l.isErrorOccurred,function(){m.to(a.alertIdentifierId).error="Error occurred!"})}]),angular.module("expenses").controller("ExpenseEntryController",["$scope","$rootScope","Expense","$timeout","EXPENSE_EVENTS","MIXPANEL_EVENTS",function(a,b,c,d,e,f){a.minDate=moment().year(2e3);var g=300;a.updateExpense=function(c,h,i){if(c.$valid&&!a.isUpdating){var j=moment().diff(h.model.spentDate||c.spentDate)<=0;if(j)return void c.spentDate.$setValidity("validDate",!1);a.isUpdating=!0,i&&i.originalObject&&(h.model.category=angular.copy(i.originalObject.model)),h.save().then(function(){mixpanel.track(f.expenseCreated),d(function(){a.isUpdating=!1,b.$broadcast(e.isUpdated,{expense:h})},g)})["catch"](function(){a.category={},a.isUpdating=!1,a.badPostSubmitResponse=!0,b.$broadcast(e.isErrorOccurred,{})})}}}]),angular.module("expenses").directive("caretPricePosition",["$timeout",function(a){return{link:function(b,c,d){c.on("focus, click",function(){var b=this;a(function(){var a=b.value.length;void 0!==b.setSelectionRange?b.setSelectionRange(a,a):$(b).val(b.value)})})}}}]),angular.module("expenses").directive("escapeHtml",function(){return{require:"?ngModel",link:function(a,b,c,d){d&&d.$parsers.unshift(function(a){return""==a||null==a||void 0==a?null:_.escape(a)})}}}),angular.module("expenses").directive("expenseEntry",["$rootScope","EXPENSE_EVENTS",function(a,b){return{restrict:"A",controller:"ExpenseEntryController",scope:{categories:"=",expense:"=",isEnoughExpensesForBulkAction:"&"},templateUrl:"app/expenses/partials/expense/expense.entry.template.html",link:function(c,d,e){c.user=a.currentUser,c.shownExpense=angular.copy(c.expense),c.category={},c.showContent=!1,c.datePickerStatus={},c.toggleContent=function(){c.showContent=!c.showContent,c.showContent&&(c.maxDate=moment().hours(0).minutes(0).seconds(0))},c.toggleMark=function(){c.expense.marked=!c.expense.marked,c.shownExpense.marked=c.expense.marked},c.openDatePicker=function(a){a.preventDefault(),a.stopPropagation(),c.datePickerStatus.opened=!0},c.cancel=function(){c.toggleContent(),c.shownExpense=angular.copy(c.expense)},a.$on(b.isUpdated,function(a,b){c.expense.model.id===b.expense.model.id&&(c.shownExpense.marked=!1,c.expense=angular.copy(c.shownExpense),c.cancel())})}}}]),angular.module("expenses").directive("expenseList",["$rootScope","$timeout","EXPENSE_EVENTS",function(a,b,c){return{restrict:"A",scope:{expenses:"=",categories:"=",searchByText:"="},templateUrl:"app/expenses/partials/expense/expense.list.template.html",link:function(c,d,e){c.reverseOrder="desc"===e.sort;var f=500;c.user=a.currentUser,c.defaultExpensesLimit=20,c.filteredExpenses=0,c.isSearchByActivated=function(){return""!==c.searchByText&&!_.isUndefined(c.searchByText)},c.isLoadingMore=!1,c.expensesLimit=c.defaultExpensesLimit,c.showExpensesContent=!0,c.showEmptyExpensesContent="true"===e.showEmptyContent,"true"===e.toggleContent&&(c.showExpensesContent=!1,c.togglePastExpensesContent=function(){c.showExpensesContent=!c.showExpensesContent}),c.loadMoreExpenses=function(){c.isLoadingMore=!c.isLoadingMore,b(function(){c.expensesLimit=c.expensesLimit+c.defaultExpensesLimit,c.isLoadingMore=!c.isLoadingMore},f)},c.isStillExpensesToBeLoaded=function(){return c.expensesLimit<c.expenses.length}}}}]),angular.module("expenses").directive("formatPrice",["$filter",function(a){return{require:"?ngModel",link:function(a,b,c,d){if(d){var e={prefix:"",centsSeparator:",",thousandsSeparator:"."};d.$formatters.unshift(function(){return b[0].value=100*parseInt(d.$modelValue,10),b.priceFormat(e),b[0].value}),d.$parsers.unshift(function(){return b.priceFormat(e),b[0].value.replace(/\./g,"").replace(/,/g,".")})}}}}]),angular.module("common").directive("validPrice",function(){return{require:"ngModel",scope:{ngModel:"="},link:function(a,b,c,d){function e(a){return!(""===a||_.isUndefined(a)||parseFloat(a)<=.01)}d.$validators.validPrice=function(a){return e(a)}}}}),angular.module("expenses").filter("expensesHeader",["$sce",function(a){return function(b,c){var d=c?'<span class="expense-list-box__header__past">You have $1 expenses</span>':'<span class="expense-list-box__header__upcoming">Your expenses</span>';return a.trustAsHtml(d.replace("$1",b||"0"))}}]),angular.module("expenses").filter("highlightSearch",["$sce",function(a){return function(b,c){return c&&(b=b.replace(new RegExp("("+c+")","gi"),'<span class="expense__found--highlight">$1</span>')),a.trustAsHtml(b)}}]),angular.module("expenses").service("ExpenseService",["EXPENSE_URLS","$q","$http","$injector","ExpenseTransformerService",function(a,b,c,d,e){this.createExpense=function(b){return c.post(URLTo.api(a.create),e.toExpenseDto(b)).then(function(a){return e.toExpense(a.data,b),a})},this.updateExpense=function(b){var d=e.toExpenseDto(b);return c.put(URLTo.api(a.update),d).then(function(a){return e.toExpense(a.data,b),a})},this.deleteExpense=function(b){var d=e.toExpenseDto(b);return c["delete"](URLTo.api(a["delete"],{":id":d.id}),d).then(function(a){return e.toExpense(a.data,b),a.data})},this.getAllExpenses=function(){return c.get(URLTo.api(a.allExpenses)).then(function(a){return e.toExpenses(a.data)})["catch"](function(a){return b.reject(a)})},this.getDetails=function(b){return c.get(URLTo.api(a.details,{":id":b})).then(function(a){return e.toExpense(a.data,d.get("Expense").build())})},this.bulkDelete=function(b){return c.put(URLTo.api(a.bulkDelete),e.toExpenseDTOs(b)).then(function(a){return a.data})}}]),angular.module("expenses").service("ExpenseTransformerService",["$injector","TransformerUtils",function(a,b){this.toExpenseDto=function(a,c){var d={};return b.copyKeysFromTo(a.model,d,c),d.spentDate&&(d.spentDate=moment(d.spentDate).format("YYYY-MM-DDTHH:mm:ss.hhh")),d},this.toExpense=function(c,d,e){return d=d||a.get("Expense").build(),b.copyKeysFromTo(c,d.model,e),d.model.spentDate&&(d.model.spentDate=moment(d.model.spentDate).toDate()),d},this.toExpenses=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toExpense(a))},this)),b},this.toExpenseDTOs=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toExpenseDto(a))},this)),b}}]),angular.module("expenses").factory("Expense",["$q","$http","ExpenseService","ExpenseTransformerService",function(a,b,c,d){function e(){this.model={id:"",category:"",value:0,description:"",spentDate:""},this.marked=!1,this.isNew=function(){return""===this.model.id||_.isUndefined(this.model.id)},this.save=function(){return this.isNew()?c.createExpense(this):c.updateExpense(this)},this.destroy=function(){return c.deleteExpense(this)}}return e.build=function(a){return _.isEmpty(a)?new e:d.toExpense(a,new e)},e}]),angular.module("insights",["common","expenses"]).config(["$stateProvider",function(a){a.state("insights",{url:"/insights",templateUrl:"app/insight/partials/insight.html",controller:"InsightController",resolve:{insight:["InsightService",function(a){var b=moment().year(2012).hours(0).minutes(0).seconds(0),c=moment().year(2016).hours(0).minutes(0).seconds(0);return a.fetchInsightsFromTo(b,c)}]},title:"Insights - Revaluate"})}]),angular.module("insights").constant("INSIGHTS_URLS",{fetchInsights:"insights/retrieve_from_to?from=:from&to=:to"}),angular.module("insights").controller("InsightController",["$scope","$rootScope","$timeout","insight","MIXPANEL_EVENTS",function(a,b,c,d,e){mixpanel.track(e.insightsPage),a.insight=d,a.insightLineData=[d.model.insightData],
a.insightLineSeries=["Categories"]}]),angular.module("insights").service("InsightService",["INSIGHTS_URLS","$q","$http","$injector","InsightTransformerService",function(a,b,c,d,e){this.fetchInsightsFromTo=function(f,g){var h=moment(f).format("YYYY-MM-DDTHH:mm:ss")+"Z",i=moment(g).format("YYYY-MM-DDTHH:mm:ss")+"Z";return c.get(URLTo.api(a.fetchInsights,{":from":h,":to":i})).then(function(a){return e.toInsight(a.data,d.get("Insight").build())})["catch"](function(a){return b.reject(a)})}}]),angular.module("insights").service("InsightTransformerService",["$injector","TransformerUtils",function(a,b){this.toInsightDto=function(a,c){var d={};return b.copyKeysFromTo(a.model,d,c),d.from&&(d.from=moment(d.from).format("YYYY-MM-DDTHH:mm:ss.hhh")),d.to&&(d.to=moment(d.to).format("YYYY-MM-DDTHH:mm:ss.hhh")),d},this.toInsight=function(c,d,e){return d=d||a.get("Insight").build(),b.copyKeysFromTo(c,d.model,e),d.model.from&&(d.model.from=moment(d.model.from).toDate()),d.model.to&&(d.model.to=moment(d.model.to).toDate()),d},this.toInsights=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toInsight(a))},this)),b},this.toInsightDTOs=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toInsightDto(a))},this)),b}}]),angular.module("insights").factory("Insight",["$q","$http","InsightService","InsightTransformerService",function(a,b,c,d){function e(){this.model={insightData:[],insightColors:[],insightLabels:[],from:"",to:""}}return e.build=function(a){return _.isEmpty(a)?new e:d.toInsight(a,new e)},e}]),angular.module("app",["config","ngAnimate","ngMessages","angucomplete-alt","ngStorage","partials","site","feedback","common","categories","expenses","account","insights","angular.filter"]).config(["$locationProvider",function(a){a.html5Mode({enabled:!0,requireBase:!1})}]).run(["ENV",function(a){URLTo.apiBase(a.apiEndpoint)}]),angular.module("app").controller("AppController",["$rootScope","$scope","$state","$timeout","$log","AuthService","User","StatesHandler","AUTH_EVENTS","ACTIVITY_INTERCEPTOR","ERROR_INTERCEPTOR","ENV",function(a,b,c,d,e,f,g,h,i,j,k,l){a.$state=c,a.ENV=l,a.currentUser=g.$new().loadFromSession(),e.log("Current user: ",a.currentUser),b.$on(i.loginSuccess,function(){a.currentUser=g.$new().loadFromSession(),f.redirectToAttemptedUrl(),e.log("Logged in: ",a.currentUser)}),b.$on(i.refreshUser,function(){a.currentUser=g.$new().loadFromSession(),e.log("Refreshed user: ",a.currentUser)}),b.$on(i.sessionTimeout,function(){e.log("Session timed out."),f.logout()}),b.$on(i.notAuthenticated,function(){e.log("Not authenticated."),f.logout(),f.saveAttemptUrl(),h.goToLogin()}),b.$on(i.logoutSuccess,function(){a.currentUser=g.$new(),e.log("Logged out.")}),a.$on("$stateChangeStart",function(){a.$broadcast(j.activityStart)}),a.$on("$viewContentLoaded",function(){a.$broadcast(j.activityEnd)}),b.$on(k.status500,function(){c.go("500")})}]),angular.module("partials",["app/site/partials/404.html","app/site/partials/500.html","app/site/partials/about.html","app/site/partials/home.html","app/site/partials/privacy.html","app/categories/partials/add-category-directive-template.html","app/categories/partials/categories.html","app/categories/partials/color-picker-directive-template.html","app/categories/partials/edit-remove-category-directive-template.html","app/expenses/partials/expense.category.template.html","app/expenses/partials/expense/expense.entry.template.html","app/expenses/partials/expense/expense.list.template.html","app/expenses/partials/expense/expenses.html","app/expenses/partials/expense/expenses.template.html","app/account/partials/account.html","app/account/partials/account_close.html","app/account/partials/logout.html","app/account/partials/settings/settings.html","app/account/partials/settings/settings.preferences.html","app/account/partials/settings/settings.profile.html","app/account/partials/signup_confirm_abstract.html","app/account/partials/signup_confirm_invalid.html","app/account/partials/signup_confirm_valid.html","app/account/partials/signup_setup.html","app/account/partials/validate_password_reset_token_abstract.html","app/account/partials/validate_password_reset_token_invalid.html","app/account/partials/validate_password_reset_token_valid.html","app/insight/partials/insight.html","app/feedback/partials/feedback-modal.html","app/common/partials/emailList/emailList.html","app/common/partials/flash-messages.html","app/common/partials/footer-home.html","app/common/partials/footer.html","app/common/partials/header-home.html","app/common/partials/header.html","app/common/partials/timepickerPopup/timepickerPopup.html","template/accordion/accordion-group.html","template/accordion/accordion.html","template/alert/alert.html","template/carousel/carousel.html","template/carousel/slide.html","template/datepicker/datepicker.html","template/datepicker/day.html","template/datepicker/month.html","template/datepicker/popup.html","template/datepicker/year.html","template/modal/backdrop.html","template/modal/window.html","template/pagination/pager.html","template/pagination/pagination.html","template/popover/popover.html","template/progressbar/bar.html","template/progressbar/progress.html","template/progressbar/progressbar.html","template/rating/rating.html","template/tabs/tab.html","template/tabs/tabset.html","template/timepicker/timepicker.html","template/tooltip/tooltip-html-unsafe-popup.html","template/tooltip/tooltip-popup.html","template/typeahead/typeahead-match.html","template/typeahead/typeahead-popup.html"]),angular.module("app/site/partials/404.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/404.html",'<div class="error__sections">\n    <h1 class="error__sections__heading">Hmm... looks like a 404</h1>\n\n    <div class="error__sections__reason">We can\'t really impress you since that page doesn\'t actually exist.</div>\n    <div class="error__sections__reason error__sections__reason--last">Probably a typo or the page may have moved.</div>\n\n    <a class="error__sections__link" href="javascript:void(0)" ng-click="goToHomePage()">Go to homepage</a>\n\n</div>')}]),angular.module("app/site/partials/500.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/500.html",'<div class="error__sections">\n    <h1 class="error__sections__heading">Oops... you found a 500</h1>\n\n    <div class="error__sections__reason">Nothing you did. It seems like an internal problem on the server.</div>\n    <div class="error__sections__reason error__sections__reason--last">If this happens again please let us know at <a class="link-primary" href="mailto:hello@reme.io">hello@reme.io</a></div>\n\n    <a class="error__sections__link" href="javascript:void(0)" ng-click="goToHomePage()">Go to homepage</a>\n\n</div>')}]),angular.module("app/site/partials/about.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/about.html",'<div header-home class="view-container__header"></div>\n\n<div class="view-container--about">\n    <div class="about__sections">\n        <h1 class="about__sections__heading">About us</h1>\n\n        <h1 class="about__sections__description">\n            We are a small team of 2 and we\'re really passioned about building Reme. Our main goal is to make our users happy (that\'s you!)\n            and we hope you like using it. If you\'d like to say hi, here we are.\n        </h1>\n\n        <div class="about__sections__team">\n            <div class="about__sections__team__entry">\n                <img class="about__sections__team__entry__img" src="/build/assets/img/c4162760-9cf2-11e4-9312-dbead076a43a.png">\n\n                <div class="about__sections__team__desc">Sorin Pantiş</div>\n                <div class="about__sections__team__link">\n                    <a href="https://twitter.com/sorinpantis" target="_blank">@sorinpantis</a>\n                </div>\n            </div>\n\n            <div class="about__sections__team__entry">\n                <img class="about__sections__team__entry__img" src="/build/assets/img/c4105efc-9cf2-11e4-99aa-22889cb05bd0s.jpg">\n\n                <div class="about__sections__team__desc">Ioan Lucuţ</div>\n                <div class="about__sections__team__link">\n                    <a href="https://twitter.com/ioanlucut" target="_blank">@ioanlucut</a>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<div footer-home class="view-container__footer footer-about"></div>')}]),angular.module("app/site/partials/home.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/home.html",'<div header-home></div>\n\n<div class="home">\n\n    <div class="home__section">\n        <h1 class="home__title">Change the way you spend your money</h1>\n\n        <h3 class="home__description">Keep a record of all your expenses. Or just some of them.\n            <br> Have simple insights and set clear goals.</h3>\n    </div>\n\n    <div class="home__section">\n        <div class="home__section__features">\n            <ul class="home__section__features--list">\n                <li><span class="icon-checkmark"></span>Easy and fast input of your expenses</li>\n                <li><span class="icon-checkmark"></span>Easily import your expenses from other apps</li>\n                <li><span class="icon-checkmark"></span>Simple, meaningfull visual insights</li>\n                <li><span class="icon-checkmark"></span>Clear, achievable goals</li>\n            </ul>\n        </div>\n\n        <div class="home__section__signup" ng-controller="HomeSignUpRegistrationController">\n\n            <!-- Sign-up form -->\n            <form name="signUpForm" ng-submit="signUp(signUpData)" novalidate focus-first-error>\n\n                <!-- Title -->\n                <h1 class="account__title">Sign Up</h1>\n\n                <!-- Flash messages. -->\n                <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n                <!-- Form groups -->\n                <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.firstName.$invalid || badPostSubmitResponse)}">\n                    <div class="form-group-input__message" ng-if="signUpForm.firstName.$invalid && signUpForm.$submitted">Please tell us your First Name.</div>\n                    <input class="form-group-input__input" type="text" name="firstName" placeholder="First Name" ng-model="signUpData.firstName" required />\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.lastName.$invalid || badPostSubmitResponse)}">\n                    <div class="form-group-input__message" ng-if="signUpForm.lastName.$invalid && signUpForm.$submitted">Please tell us your Last Name.</div>\n                    <input class="form-group-input__input" type="text" name="lastName" placeholder="Last Name" ng-model="signUpData.lastName" required />\n                </div>\n\n                <!-- Email input -->\n                <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.email.$invalid || badPostSubmitResponse)}">\n                    <!-- Error messages -->\n                    <div class="form-group-input__message" ng-class="{\'has-error\': signUpForm.email.$invalid && signUpForm.$submitted}" ng-messages="signUpForm.email.$error" ng-if="signUpForm.$submitted">\n                        <div ng-message="required">Please add your email address.</div>\n                        <div ng-message="validEmail">Missed a letter? It looks like an invalid email address.</div>\n                        <div ng-message="uniqueEmail">This email address is already used. <a href="javascript:void(0)" account-modal-toggle="forgotPassword">Forgot your password?</a></div>\n                    </div>\n                    <input class="form-group-input__input" type="email" name="email" placeholder="Email" ng-model="signUpData.email" required valid-email unique-email />\n                </div>\n\n                <!-- Form groups -->\n                <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.password.$invalid || badPostSubmitResponse)}">\n                    <!-- Error messages -->\n                    <div class="form-group-input__message" ng-class="{\'has-error\': signUpForm.$submitted && signUpForm.password.$invalid}" ng-messages="signUpForm.password.$error" ng-if="signUpForm.$submitted">\n                        <div ng-message="required">Please choose a password.</div>\n                        <div ng-message="strongPassword">Please choose a password with at least 7 characters.</div>\n                    </div>\n                    <input class="form-group-input__input" type="password" name="password" placeholder="Password" ng-model="signUpData.password" required strong-password />\n                </div>\n\n                <!-- Button container -->\n                <button class="home__section__signup__btn" type="submit">{{isRequestPending ? \'Signing up..\' : \'Start my 14 day free trial\'}}</button>\n            </form>\n        </div>\n    </div>\n\n    <div class="home__section">\n\n    </div>\n\n</div>\n\n<div footer-home class="view-container__footer"></div>\n\n')}]),angular.module("app/site/partials/privacy.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/privacy.html",'<div header-home class="view-container__header"></div>\n\n<div class="view-container--terms">\n\n    <div class="privacy__sections">\n\n        <h1>Terms of use</h1>\n        <ul>\n            <li>Reme is a tool created in the sole purpose of helping people get organized by creating expenses which will be sent to the provided e-mail address(es) at a specific date and time. Reme is not responsible for the content entered by the user.</li>\n            <li>Reme uses e-mail as the only notification method. Reme is not responsible for missed dead-lines, appointments or other time-critical events.</li>\n        </ul>\n\n        <h3>What personal data do we collect?</h3>\n        <ul>\n            <li>By registering or authenticating, you allow Reme to identify you and give you access to its services.</li>\n            <li>We store your name and email address used for registration.</li>\n        </ul>\n\n        <h3>Third party service that use personal data</h3>\n        <ul>\n            <li>Mandrill (from Mailchimp) - the mail server used to send the expenses</li>\n            <li>Mixpanel - used to track actions with the purpose of improving the application&#39;s user experience</li>\n            <li>Reamaze - used to manage the conversations with our users</li>\n        </ul>\n\n        <h1>Privacy Policy</h1>\n        <ul>\n            <li>The information Reme stores is the subject of the expense and the e-mail address(es) the user enters for the expense recipient.</li>\n            <li>We use local storage to save expense related data for better user-experience. We do not collect anonymous data of any kind.</li>\n            <li>The only e-mail Reme will send to the provided address(es) as recipients will be the expense which the user creates.</li>\n            <li>We will only use your email address(es) to send the expenses you create or for Reme related notifications.</li>\n            <li>We will not use your email address to send newsletters or advertising that you didn&#39;t subscribe to.</li>\n            <li>We will not share your e-mail address or the e-mail address(es) you used for other recipients with 3rd party entities in the scope of advertising or spam.</li>\n        </ul>\n\n        <p>We may change the Privacy policy and/or the Terms of use without notice.</p>\n\n        <h3>Contact</h3>\n\n        <p>Please feel free to contact us at hello@reme.io for any questions or concerns you may have regarding the terms of use or the privacy policy.</p>\n    </div>\n</div>\n\n<div footer-home class="view-container__footer footer-about"></div>')}]),angular.module("app/categories/partials/add-category-directive-template.html",[]).run(["$templateCache",function(a){a.put("app/categories/partials/add-category-directive-template.html",'<!--Show content-->\n<div class="categories__add__controls" ng-if="! showContent">\n    <button class="categories__add__controls__btn" ng-click="toggleContent()">Add category</button>\n</div>\n\n<!-- Add category form -->\n<form name="categoryForm" class="categories__add__form" ng-if="showContent" ng-submit="saveCategory(categoryForm)" novalidate focus-first-error>\n\n    <!--Content left-->\n    <div class="categories__add__form__content__left">\n\n        <!-- Form group -->\n        <div class="categories__form__input-group" ng-class="{\'has-error\': categoryForm.$submitted && (categoryForm.color.$invalid || badPostSubmitResponse)}">\n            <!--Color preview-->\n            <label class="categories__form__color__preview" ng-style="{\'background\':category.model.color}"></label>\n\n            <input class="categories__form__input-group__color" type="text" placeholder="Category color" name="color" ng-model="category.model.color" required valid-category-color />\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': categoryForm.color.$invalid && categoryForm.$submitted}" ng-messages="categoryForm.color.$error" ng-if="categoryForm.$submitted">\n                <div ng-message="required">Color is mandatory.</div>\n                <div ng-message="validCategoryColor">Color is not valid.</div>\n            </div>\n\n            <div color-picker category-color="category.model.color"></div>\n        </div>\n\n        <div class="categories__form__input-group" ng-class="{\'has-error\': categoryForm.$submitted && (categoryForm.name.$invalid || badPostSubmitResponse)}">\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': categoryForm.name.$invalid && categoryForm.$submitted}" ng-messages="categoryForm.name.$error" ng-if="categoryForm.$submitted">\n                <div ng-message="required">Name is mandatory.</div>\n                <div ng-message="validCategoryName">Name is not valid.</div>\n                <div ng-message="uniqueCategoryName">Name is already used.</div>\n            </div>\n            <input type="text"\n                   name="name"\n                   class="categories__form__input-group__name"\n                   placeholder="Category name"\n                   maxlength="30"\n                   ng-model="category.model.name"\n                   auto-focus required valid-category-name unique-category-name />\n        </div>\n\n    </div>\n\n    <!--Content right-->\n    <div class="categories__add__form__content__right">\n        <!--Reset-->\n        <button type="button" class="categories__add__form__content__right__cancel" ng-click="toggleContent();initOrReset(categoryForm)">Nevermind</button>\n        <!-- Submit button container -->\n        <button class="categories__add__form__content__right__add" type="submit">{{isSaving ? \'Adding..\' : \'Add\'}}</button>\n    </div>\n</form>')}]),angular.module("app/categories/partials/categories.html",[]).run(["$templateCache",function(a){a.put("app/categories/partials/categories.html",'<div header class="view-container__header"></div>\n\n<div class="view-container__content">\n\n    <!-- Flash messages. -->\n    <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n    <!--Add category-->\n    <div class="categories__add" add-category></div>\n\n    <!--List all categories-->\n    <div class="categories__edit">\n\n        <div class="categories__edit__category" ng-repeat="category in categories track by category.model.name">\n\n            <!--Edit/remove category-->\n            <div edit-remove-category category="category"></div>\n        </div>\n\n    </div>\n\n</div>\n\n<div footer class="view-container__footer"></div>')}]),angular.module("app/categories/partials/color-picker-directive-template.html",[]).run(["$templateCache",function(a){a.put("app/categories/partials/color-picker-directive-template.html",'<div class="color-picker-box">\n\n    <div class="color-picker__popover">\n\n        <div class="color-picker__popover__colors">\n\n            <div class="color-picker__popover__colors__color" ng-repeat="color in colors">\n\n                <!--Color picker-->\n                <div class="color-picker__popover__colors__color__name" ng-style="{\'background\':color.color}" ng-click="select(color)"></div>\n            </div>\n        </div>\n\n    </div>\n\n</div>')}]),angular.module("app/categories/partials/edit-remove-category-directive-template.html",[]).run(["$templateCache",function(a){a.put("app/categories/partials/edit-remove-category-directive-template.html",'<!--Category group-->\n<div class="categories__edit__category__name" ng-if="! showContent">\n    <span class="categories__edit__category__color" ng-style="{\'background\':category.model.color}">C</span>\n    <span class="categories__edit__category__label">{{category.model.name}}</span>\n</div>\n\n<div class="categories__edit__category__controls" ng-if="! showContent">\n    <!--Show content-->\n    <button class="categories__edit__category__delete" ng-click="deleteCategory(category)">{{isDeleting ? \'Deleting..\' : \'Delete\'}}</button>\n    <button class="categories__edit__category__edit" ng-click="toggleContent()">Edit</button>\n</div>\n\n<!-- Update category form -->\n<form name="categoryForm" class="categories__edit__form" ng-if="showContent" ng-submit="updateCategory(categoryForm, category)" novalidate focus-first-error>\n\n    <!--Content left-->\n    <div class="categories__edit__form__content__left">\n\n        <!-- Category color form group -->\n        <div class="categories__form__input-group" ng-class="{\'has-error\': categoryForm.$submitted && (categoryForm.color.$invalid || badPostSubmitResponse)}">\n            <!--Color preview-->\n            <label class="categories__form__color__preview" ng-style="{\'background\':category.model.color}"></label>\n\n            <input class="categories__form__input-group__color" type="text" placeholder="Category color" name="color" ng-model="category.model.color" required valid-category-color />\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': categoryForm.color.$invalid && categoryForm.$submitted}" ng-messages="categoryForm.color.$error" ng-if="categoryForm.$submitted">\n                <div ng-message="required">Color is mandatory.</div>\n                <div ng-message="validCategoryColor">Color is not valid.</div>\n            </div>\n\n            <div color-picker category-color="category.model.color"></div>\n        </div>\n\n        <!-- Category label form group-->\n        <div class="categories__form__input-group" ng-class="{\'has-error\': categoryForm.$submitted && (categoryForm.name.$invalid || badPostSubmitResponse)}">\n            <input class="categories__form__input-group__name" type="text" placeholder="Category name" name="name" ng-model="category.model.name" auto-focus required valid-category-name unique-category-name except="masterCategory.model.name" />\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': categoryForm.name.$invalid && categoryForm.$submitted}" ng-messages="categoryForm.name.$error" ng-if="categoryForm.$submitted">\n                <div ng-message="required">Name is mandatory.</div>\n                <div ng-message="validCategoryName">Name is not valid.</div>\n                <div ng-message="uniqueCategoryName">Name is already used.</div>\n            </div>\n        </div>\n\n    </div>\n\n    <!--Content right-->\n    <div class="categories__edit__form__content__right">\n        <!--Reset-->\n        <button class="categories__edit__form__content__right__cancel" ng-click="cancel();">Nevermind</button>\n        <!-- Button container -->\n        <button class="categories__edit__form__content__right__update" type="submit">{{isUpdating ? \'Saving..\' : \'Save changes\'}}</button>\n    </div>\n\n</form>')}]),angular.module("app/expenses/partials/expense.category.template.html",[]).run(["$templateCache",function(a){a.put("app/expenses/partials/expense.category.template.html",'<div class="angucomplete-holder" ng-class="{\'angucomplete-dropdown-visible\': showDropdown}">\n    <input id="{{id}}_value" ng-style="{\'background\':selectedObject.originalObject.model.color}" ng-model="searchStr" ng-disabled="disableInput" type="{{type}}" placeholder="{{placeholder}}" maxlength="{{maxlength}}" ng-focus="onFocusHandler()" class="{{inputClass}}" ng-focus="resetHideResults()" ng-blur="hideResults($event)" autocapitalize="off" autocorrect="off" autocomplete="off" ng-change="inputChangeHandler(searchStr)" />\n\n    <div id="{{id}}_dropdown" class="angucomplete-dropdown expense__form__category__angucomplete-dropdown" ng-show="showDropdown">\n        <div class="angucomplete-searching" ng-show="searching" ng-bind="textSearching"></div>\n        <div class="angucomplete-row" ng-repeat="result in results" ng-click="selectResult(result)" ng-mouseenter="hoverRow($index)" ng-class="{\'angucomplete-selected-row\': $index == currentIndex}">\n            <div class="angucomplete-image-holder expense__form__category__angucomplete-image-holder">\n                <label class="expense__form__category__color__preview" ng-style="{\'background\':result.originalObject.model.color}"></label>\n            </div>\n            <div class="angucomplete-title" ng-if="matchClass" ng-bind-html="result.title"></div>\n            <div class="angucomplete-title" ng-if="!matchClass">{{ result.title }}</div>\n            <div ng-if="matchClass && result.description && result.description != \'\'" class="angucomplete-description" ng-bind-html="result.description"></div>\n            <div ng-if="!matchClass && result.description && result.description != \'\'" class="angucomplete-description">{{result.description}}</div>\n        </div>\n    </div>\n</div>')}]),angular.module("app/expenses/partials/expense/expense.entry.template.html",[]).run(["$templateCache",function(a){a.put("app/expenses/partials/expense/expense.entry.template.html",'<!--Display expense-->\n<div class="expenses__list__entry__display" ng-if="! showContent" ng-class="expense.marked ? \'expense__bulk--marked\' : \'\'" ng-click="toggleMark();$event.stopPropagation();">\n\n    <div class="expenses__list__entry__select icon-checkmark" ng-if="expense.marked"></div>\n\n    <div class="expenses__list__entry__price">\n        {{expense.model.value | currency:""}}\n        <span class="expenses__list__entry__currency">{{user.model.currency.currencyCode}}</span>\n    </div>\n\n    <!--Expense category-->\n    <div class="expenses__list__entry__category" ng-style="{\'background\':expense.model.category.color}" ng-bind-html="expense.model.category.name"></div>\n\n    <!--Expense description-->\n    <div class="expenses__list__entry__details" ng-bind-html="expense.model.description | highlightSearch:searchByText"></div>\n\n    <!--Expense date-->\n    <div class="expenses__list__entry__date">{{expense.model.spentDate | friendlyDate}}</div>\n\n    <button class="expenses__list__entry__editbtn icon-pen" type="button" ng-click="toggleContent();"></button>\n</div>\n\n<!-- Display expense in edit mode -->\n<div class="expenses__form" ng-if="showContent">\n\n    <form name="expenseForm" ng-submit="updateExpense(expenseForm, shownExpense, category)" novalidate focus-first-error>\n\n        <!-- Form groups -->\n        <div class="expense__form__price" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.value.$invalid || badPostSubmitResponse)}">\n            <input class="expense__form__price__input" type="text" name="value" placeholder="The value" ng-model="shownExpense.model.value" format-price format="number" caret-price-position required valid-price />\n            <span class="expense__form__price__currency">{{user.model.currency.currencyCode}}</span>\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.value.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="required">Please add a price.</div>\n                <div ng-message="validPrice">Price is invalid</div>\n            </div>\n        </div>\n\n        <!-- Form group -->\n        <div class="expense__form__category" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.$error[\'autocomplete-required\'] || expenseForm.category.$invalid || badPostSubmitResponse)}">\n\n            <div angucomplete-alt\n                 selected-object="category"\n                 local-data="categories"\n                 search-fields="model.name"\n                 title-field="model.name"\n                 field-required="true"\n                 placeholder="Add category"\n                 maxlength="50"\n                 pause="1"\n                 minlength="0"\n                 initial-value="{{shownExpense.model.category.name}}"\n                 input-class="expense__form__category__input"\n                 match-class="highlight"\n                 template-url="app/expenses/partials/expense.category.template.html">\n            </div>\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="autocomplete-required">Category is missing or is invalid.</div>\n            </div>\n\n            <div class="form-group-input__message" ng-if="expenseForm.category.$invalid && expenseForm.$submitted">Please add a category.</div>\n        </div>\n\n        <!-- Description input -->\n        <div class="expense__form__details" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.description.$invalid || badPostSubmitResponse)}">\n            <input class="expense__form__details__input" type="text" name="description" ng-maxlength="30" maxlength="30" placeholder="Add details (optional)" ng-model="shownExpense.model.description" escape-html />\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.description.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="maxlength">Hmm. Too long.</div>\n            </div>\n        </div>\n\n        <!-- Date input -->\n        <div class="expense__form__date" ng-class="{\'has-error\': expenseForm.spentDate.$invalid && expenseForm.$submitted}">\n\n            <!--Hidden input of the expense chosen date-->\n            <input type="hidden" name="spentDate" ng-model="shownExpense.model.spentDate" required valid-date />\n\n            <!--Expense date picker-->\n            <div class="expense__form__date__input">\n                <button ng-click="openDatePicker($event)" type="button"\n                        datepicker-popup is-open="datePickerStatus.opened"\n                        min-date="minDate"\n                        max-date="maxDate"\n                        ng-model="shownExpense.model.spentDate"\n                        datepicker-options="{startingDay:1,showWeeks:false}">\n                    {{shownExpense.model.spentDate | friendlyDate}}\n                </button>\n            </div>\n\n            <!--Error messages-->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.spentDate.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="required">Please make that you add a date.</div>\n                <div ng-message="validDate">Date should be in the past.</div>\n            </div>\n        </div>\n\n        <!-- Button container -->\n        <div class="expense__form__submit">\n            <span ng-if="isUpdating">\n                <span>Saving the expense...</span>\n            </span>\n            <span ng-if="! isUpdating">\n                <span class="expense__edit__form__cancelbtn">\n                    <button type="button" ng-click="cancel();">Discard</button>\n                    <span>changes.</span>\n                </span>\n                <span class="expense__edit__form__savebtn">\n                    <span>Enter to</span>\n                    <button type="submit">save</button>\n                    <span>the changes.</span>\n                </span>\n            </span>\n        </div>\n    </form>\n\n\n</div>');

}]),angular.module("app/expenses/partials/expense/expense.list.template.html",[]).run(["$templateCache",function(a){a.put("app/expenses/partials/expense/expense.list.template.html",'<!--Expense list content.-->\n<div ng-show="showExpensesContent" class="expense-list-box" ng-class="{ \'expense-list-box--past-expenses\': reverseOrder}">\n\n    <div class="expenses__list">\n\n        <!--Expense list-->\n        <div class="expenses__list__entry"\n             ng-repeat="expense in expenses | orderObjectBy : \'model.spentDate\' : reverseOrder | limitTo: expensesLimit | filter:{model:{description:searchByText}} as filteredExpenses track by expense.model.id"\n\n             expense-entry expense="expense" categories="categories">\n        </div>\n    </div>\n\n    <div ng-if="isStillExpensesToBeLoaded()">\n        <button type="submit" class="expenses__list__loadbtn" ng-click="loadMoreExpenses()">{{isLoadingMore ? \'Loading..\' : \'Load more\'}}</button>\n    </div>\n\n</div>')}]),angular.module("app/expenses/partials/expense/expenses.html",[]).run(["$templateCache",function(a){a.put("app/expenses/partials/expense/expenses.html",'<!-- Add a new expense form -->\n<div class="expenses__form">\n\n    <form name="expenseForm" ng-submit="saveExpense()" novalidate focus-first-error>\n\n        <!-- Flash messages. -->\n        <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n        <!-- Form groups -->\n        <div class="expense__form__price" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.value.$invalid || badPostSubmitResponse)}">\n            <input class="expense__form__price__input" type="text" name="value" placeholder="The value" maxlength="14" ng-model="expense.model.value" format-price format="number" caret-price-position required valid-price />\n            <span class="expense__form__price__currency">{{user.model.currency.currencyCode}}</span>\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.value.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="required">Don\'t forget the price.</div>\n                <div ng-message="validPrice">Oops, you missed the price.</div>\n            </div>\n        </div>\n\n        <!-- Form group -->\n        <div class="expense__form__category" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.$error[\'autocomplete-required\'] || expenseForm.category.$invalid || badPostSubmitResponse)}">\n\n            <div angucomplete-alt\n                 selected-object="category"\n                 local-data="categories"\n                 search-fields="model.name"\n                 title-field="model.name"\n                 field-required="true"\n                 placeholder="Add category"\n                 maxlength="50"\n                 pause="1"\n                 minlength="0"\n                 input-class="expense__form__category__input"\n                 match-class="angucomplete-highlight"\n                 template-url="app/expenses/partials/expense.category.template.html">\n            </div>\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="autocomplete-required">Category is missing or is invalid.</div>\n            </div>\n\n            <div class="form-group-input__message" ng-if="expenseForm.category.$invalid && expenseForm.$submitted">Please add a category.</div>\n        </div>\n\n        <!-- Description input -->\n        <div class="expense__form__details" ng-class="{\'has-error\': expenseForm.$submitted && (expenseForm.description.$invalid || badPostSubmitResponse)}">\n            <input class="expense__form__details__input" type="text" name="description" ng-maxlength="30" maxlength="30" placeholder="Add details (optional)" ng-model="expense.model.description" escape-html />\n\n            <!-- Error messages -->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.description.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="maxlength">Hmm. Too long. Make it shorter.</div>\n            </div>\n        </div>\n\n        <!-- Date input -->\n        <div class="expense__form__date" ng-class="{\'has-error\': expenseForm.spentDate.$invalid && expenseForm.$submitted}">\n\n            <!--Hidden input of the expense chosen date-->\n            <input type="hidden" name="spentDate" ng-model="expense.model.spentDate" required valid-date />\n\n            <!--Expense date picker-->\n            <div class="expense__form__date__input">\n                <button type="button"\n                        class="expense__form__date__input__btn"\n                        ng-click="openDatePicker($event)"\n                        ng-model="expense.model.spentDate"\n                        datepicker-popup\n                        is-open="datePickerOpened"\n                        min-date="datePickerMinDate"\n                        max-date="datePickerMaxDate"\n                        datepicker-options="{startingDay:1,showWeeks:false}">{{expense.model.spentDate | friendlyDate}}\n                </button>\n            </div>\n\n            <!--Error messages-->\n            <div class="form-group-input__message" ng-class="{\'has-error\': expenseForm.spentDate.$invalid && expenseForm.$submitted}" ng-messages="expenseForm.$error" ng-if="expenseForm.$submitted">\n                <div ng-message="required">Please add a date.</div>\n                <div ng-message="validDate">Date should be in the past.</div>\n            </div>\n        </div>\n\n        <!-- Button container -->\n        <div class="expense__form__submit">\n            <span ng-if="isSaving">\n                <span>Saving...</span>\n            </span>\n            <span ng-if="! isSaving">\n                <span>Enter to</span>\n                <button type="submit">save</button>\n                <span>the expense.</span>\n            </span>\n        </div>\n    </form>\n\n</div>\n\n<!--Expense bulk actions-->\n<div class="expenses__bulk-actions" ng-if="isBulkActionEnabled()">\n\n    <div class="expenses__bulk-actions__buttons">\n\n        <div class="expenses__bulk-actions__delete">\n            <button class="expenses__bulk-actions__delete__btn-delete" ng-click="performBulkDelete()">{{isBulkDeleting ? \'Deleting...\' : \'Delete\'}}</button>\n        </div>\n\n        <div class="expenses__bulk-actions__cancel">\n            <button class="expenses__bulk-actions__delete__btn-cancel" ng-click="cancelBulkAction()">Nevermind</button>\n        </div>\n\n    </div>\n\n</div>\n\n<!--The expenses list-->\n<div expense-list expenses="expenses" categories="categories" search-by-text="searchByText" sort="desc"></div>')}]),angular.module("app/expenses/partials/expense/expenses.template.html",[]).run(["$templateCache",function(a){a.put("app/expenses/partials/expense/expenses.template.html",'<div header class="view-container__header"></div>\n\n<div class="view-container__content">\n\n    <!-- Flash messages. -->\n    <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n    <div ui-view="expenses"></div>\n\n</div>\n\n<div footer class="view-container__footer"></div>')}]),angular.module("app/account/partials/account.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/account.html",'<!-- Brand logo -->\n<div class="brand-logo-block"><a ui-sref="home"></a></div>\n\n<!-- Account sections -->\n<div class="account">\n\n    <!--Sign in-->\n    <div class="account__section" ng-if="AccountModal.state === ACCOUNT_FORM_STATE.login" ng-controller="LoginController">\n\n        <!--Close-->\n        <div account-modal-close></div>\n\n        <!-- Title -->\n        <h1 class="account__title">Welcome!</h1>\n\n        <!-- Login form -->\n        <form name="loginForm" ng-submit="login(loginData)" novalidate focus-first-error>\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <div class="form-group-input" ng-class="{\'has-error\': loginForm.$submitted && (loginForm.email.$invalid || badPostSubmitResponse)}">\n                <input class="form-group-input__input" type="email" placeholder="email" name="email" ng-model="loginData.email" auto-focus required />\n                <span class="form-group-input__message" ng-if="loginForm.email.$invalid && loginForm.$submitted">Please enter your email address.</span>\n            </div>\n\n            <!-- Form group -->\n            <div class="form-group-input" ng-class="{\'has-error\': loginForm.$submitted && (loginForm.password.$invalid || badPostSubmitResponse)}">\n                <input class="form-group-input__input" type="password" placeholder="password" name="password" ng-model="loginData.password" required />\n                <span class="form-group-input__message" ng-if="loginForm.password.$invalid && loginForm.$submitted">Please enter your password.</span>\n            </div>\n\n            <!-- Reset password -->\n            <a class="link-navigation" href="javascript:void(0)" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.forgotPassword)">Forgot login details?</a>\n\n            <!-- Button container -->\n            <button class="account__btn" type="submit">{{isRequestPending ? \'Logging in..\' : \'Log in\'}}</button>\n        </form>\n\n        <a class="link-navigation" href="javascript:void(0)" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.requestSignUpRegistration)">Don\'t have an account yet? Sign up!</a>\n\n    </div>\n\n    <!--Sign up-->\n    <div class="account__section" ng-if="AccountModal.state == ACCOUNT_FORM_STATE.requestSignUpRegistration" ng-controller="HomeSignUpRegistrationController">\n\n        <!--Close-->\n        <div account-modal-close></div>\n\n        <!-- Title -->\n        <h1 class="account__title">Let\'s get you started!</h1>\n\n        <!-- Sign-up form -->\n        <form name="signUpForm" ng-submit="signUp(signUpData)" novalidate focus-first-error>\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Form groups -->\n            <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.firstName.$invalid || badPostSubmitResponse)}">\n                <div class="form-group-input__message" ng-if="signUpForm.firstName.$invalid && signUpForm.$submitted">Please tell us your First Name.</div>\n                <input class="form-group-input__input" type="text" name="firstName" placeholder="First Name" ng-model="signUpData.firstName" required />\n            </div>\n\n            <!-- Form group -->\n            <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.lastName.$invalid || badPostSubmitResponse)}">\n                <div class="form-group-input__message" ng-if="signUpForm.lastName.$invalid && signUpForm.$submitted">Please tell us your Last Name.</div>\n                <input class="form-group-input__input" type="text" name="lastName" placeholder="Last Name" ng-model="signUpData.lastName" required />\n            </div>\n\n            <!-- Email input -->\n            <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.email.$invalid || badPostSubmitResponse)}">\n                <!-- Error messages -->\n                <div class="form-group-input__message" ng-class="{\'has-error\': signUpForm.email.$invalid && signUpForm.$submitted}" ng-messages="signUpForm.email.$error" ng-if="signUpForm.$submitted">\n                    <div ng-message="required">Please add your email address.</div>\n                    <div ng-message="validEmail">Missed a letter? It looks like an invalid email address.</div>\n                    <div ng-message="uniqueEmail">This email address is already used. <a href="javascript:void(0)" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.forgotPassword)">Forgot your password?</a></div>\n                </div>\n                <input class="form-group-input__input" type="email" name="email" placeholder="Email" ng-model="signUpData.email" required valid-email unique-email />\n            </div>\n\n            <!-- Form groups -->\n            <div class="form-group-input" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.password.$invalid || badPostSubmitResponse)}">\n                <!-- Error messages -->\n                <div class="form-group-input__message" ng-class="{\'has-error\': signUpForm.$submitted && signUpForm.password.$invalid}" ng-messages="signUpForm.password.$error" ng-if="signUpForm.$submitted">\n                    <div ng-message="required">Please choose a password.</div>\n                    <div ng-message="strongPassword">Your password needs to be at least 7 characters long.</div>\n                </div>\n                <input class="form-group-input__input" type="password" name="password" placeholder="Password" ng-model="signUpData.password" required strong-password />\n            </div>\n\n            <!-- Button container -->\n            <button class="home__section__signup__btn" type="submit">Start my 14 day free trial</button>\n        </form>\n\n        <a class="link-navigation" href="javascript:void(0)" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.login)">Already have an account? Sign in here!</a>\n\n    </div>\n\n    <!-- Recover password section -->\n    <div class="account__section" ng-if="AccountModal.state == ACCOUNT_FORM_STATE.forgotPassword" ng-controller="ForgotPasswordController">\n\n        <!--Close-->\n        <div account-modal-close></div>\n\n        <!-- Title -->\n        <h1 class="account__title">Can\'t remember your password?</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">\n            Please enter the e-mail you use to log in. We\'ll send you a link to reset your password.\n        </span>\n\n        <!-- Forgot password form -->\n        <form name="forgotPasswordForm" ng-submit="requestPasswordReset(forgotPasswordData.email)" novalidate focus-first-error>\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Form group -->\n            <div class="form-group-input" ng-class="{\'has-error\': forgotPasswordForm.$submitted && (forgotPasswordForm.email.$invalid || badPostSubmitResponse)}">\n                <input class="form-group-input__input" type="email" placeholder="Your email address" name="email" ng-model="forgotPasswordData.email" auto-focus required valid-email />\n\n                <div class="form-group-input__message" ng-messages="forgotPasswordForm.email.$error" ng-if="forgotPasswordForm.$submitted">\n                    <div ng-message="required">Please enter your email address.</div>\n                    <div ng-message="validEmail">Missed a letter? It looks like an invalid email address.</div>\n                </div>\n            </div>\n\n            <!-- Button container -->\n            <button class="account__btn" type="submit">Reset password</button>\n        </form>\n\n        <a href="javascript:void(0)" class="link-navigation" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.login)">Nevermind, let me log in!</a>\n    </div>\n\n    <!-- Password recovery email sent section -->\n    <div class="account__section" ng-if="AccountModal.state == ACCOUNT_FORM_STATE.forgotPasswordEmailSent">\n\n        <!--Close-->\n        <div account-modal-close></div>\n\n        <!-- Title -->\n        <h1 class="account__title">Email has been sent!</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">Please check your email. We\'ve sent you a link to reset your password.</span>\n\n        <!-- Button container -->\n        <a href="javascript:void(0)" class="link-navigation" ng-click="AccountModal.setState(ACCOUNT_FORM_STATE.login)">Actually I remember the password</a>\n    </div>\n\n</div>')}]),angular.module("app/account/partials/account_close.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/account_close.html",'<a class="account__close" href="javascript:void(0)">+</a>')}]),angular.module("app/account/partials/logout.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/logout.html",'<!-- Account sections -->\n<div class="account">\n\n   <!-- Logout section -->\n    <div class="account__section">\n\n             <!--Message-->\n            <div class="alert alert-success">\n               Logged out successfully.\n            </div>\n    </div>\n</div>\n\n')}]),angular.module("app/account/partials/settings/settings.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/settings/settings.html",'<div header class="view-container__header"></div>\n\n<div class="centered-section-account">\n    <tabset vertical="true">\n        <tab heading="Profile">\n            <div class="account" ui-view="profile" profile-form-toggle></div>\n        </tab>\n        <tab heading="Preferences">\n            <div class="account" ui-view="preferences"></div>\n        </tab>\n    </tabset>\n</div>\n\n<div footer class="view-container__footer"></div>')}]),angular.module("app/account/partials/settings/settings.preferences.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/settings/settings.preferences.html",'<!-- Profile section -->\n<div class="account__section" ng-controller="PreferencesController">\n\n    <!-- Title -->\n    <h1 class="account__title">Modify timezone</h1>\n\n    <!-- Profile form -->\n    <form name="preferencesForm" ng-submit="updatePreferences(preferencesData)" novalidate>\n\n        <!-- Account controls -->\n        <div class="account__controls">\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Form groups -->\n            <div class="account__controls__form-groups account__controls__form-groups--last">\n\n                <!-- Form group -->\n                <div class="form-group form-group--timezone" ng-class="{\'has-error\': preferencesForm.timezone.$invalid && preferencesForm.$submitted}">\n                    <select class="form-control" chosen="{inherit_select_classes:true}" ng-options="timezone.key as timezone.value for timezone in timezones" ng-model="preferencesData.timezone" required> </select>\n                    <span class="form-group-input__message" ng-if="preferencesForm.timezone.$invalid && preferencesForm.$submitted">Please tell us your email.</span>\n                </div>\n            </div>\n\n            <!-- Button container -->\n            <button class="btn account__button" type="submit">Save changes</button>\n        </div>\n    </form>\n</div>')}]),angular.module("app/account/partials/settings/settings.profile.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/settings/settings.profile.html",'<!-- Profile section -->\n<div class="account__section" ng-if="ProfileFormToggle.state === ACCOUNT_FORM_STATE.updateProfile" ng-controller="ProfileController">\n\n    <!-- Title -->\n    <h1 class="account__title">Modify profile</h1>\n\n    <!-- Profile form -->\n    <form name="profileForm" ng-submit="updateProfile(profileData)" novalidate>\n\n        <!-- Account controls -->\n        <div class="account__controls">\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Form groups -->\n            <div class="account__controls__form-groups account__controls__form-groups--last">\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': profileForm.firstName.$invalid && profileForm.$submitted}">\n                    <input class="form-group-input__input" type="text" placeholder="Prenume" name="firstName" ng-model="profileData.firstName" required />\n                    <span class="form-group-input__message" ng-if="profileForm.firstName.$invalid && profileForm.$submitted">Please tell us your First Name.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': profileForm.lastName.$invalid && profileForm.$submitted}">\n                    <input class="form-group-input__input" type="text" placeholder="Nume" name="lastName" ng-model="profileData.lastName" required />\n                    <span class="form-group-input__message" ng-if="profileForm.lastName.$invalid && profileForm.$submitted">Please tell us your Last Name.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group">\n                    <input class="form-group-input__input" type="text" placeholder="Email" name="email" ng-value="user.model.email" disabled />\n                </div>\n            </div>\n\n            <!-- Button container -->\n            <button class="btn account__button" type="submit">Save changes</button>\n        </div>\n    </form>\n\n    <a href="javascript:void(0)" class="link-navigation" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updatePassword)">Change password</a>\n</div>\n\n<!-- Update password section -->\n<div class="account__section" ng-if="ProfileFormToggle.state === ACCOUNT_FORM_STATE.updatePassword" ng-controller="UpdatePasswordController">\n\n    <!-- Title -->\n    <h1 class="account__title">Welcome!</h1>\n\n    <!-- Update password form -->\n    <form name="updatePasswordForm" ng-submit="updatePassword(updatePasswordData)" novalidate>\n\n        <!-- Account controls -->\n        <div class="account__controls">\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Form groups -->\n            <div class="account__controls__form-groups--last">\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': updatePasswordForm.$submitted && (updatePasswordForm.oldPassword.$invalid || badPostSubmitResponse)}">\n                    <input class="form-group-input__input" type="password" placeholder="Old password" name="oldPassword" ng-model="updatePasswordData.oldPassword" auto-focus required />\n                    <span class="form-group-input__message" ng-if="updatePasswordForm.oldPassword.$invalid && updatePasswordForm.$submitted">Please enter your old password.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': updatePasswordForm.$submitted && (updatePasswordForm.newPassword.$invalid || badPostSubmitResponse)}">\n                    <input class="form-group-input__input" type="password" placeholder="New password" name="newPassword" ng-model="updatePasswordData.newPassword" required />\n                    <span class="form-group-input__message" ng-if="updatePasswordForm.newPassword.$invalid && updatePasswordForm.$submitted">Please enter a new password.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': updatePasswordForm.$submitted && (updatePasswordForm.newPasswordConfirmation.$invalid || badPostSubmitResponse)}">\n                    <input class="form-group-input__input" type="password" placeholder="New password confirmation" name="newPasswordConfirmation" ng-model="updatePasswordData.newPasswordConfirmation" required />\n                    <span class="form-group-input__message" ng-if="updatePasswordForm.newPasswordConfirmation.$invalid && updatePasswordForm.$submitted">Please confirm your new password.</span>\n                </div>\n            </div>\n\n            <!-- Button container -->\n            <button class="btn account__button" type="submit">Update password</button>\n        </div>\n    </form>\n\n    <a href="javascript:void(0)" class="link-navigation" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updateProfile)">Nevermind, take me back!</a>\n\n</div>\n\n<!-- Change password section successfully-->\n<div class="account__section" ng-if="ProfileFormToggle.state == ACCOUNT_FORM_STATE.updatePasswordSuccessfully">\n\n    <!-- Title -->\n    <h1 class="account__title">Successfully</h1>\n\n    <!-- Explain -->\n    <span class="account__explain">We\'ve successfully updated your new password.</span>\n\n    <!-- Button container -->\n    <a href="javascript:void(0)" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updateProfile)">Continue</a>\n</div>')}]),angular.module("app/account/partials/signup_confirm_abstract.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_abstract.html","<div ui-view></div>")}]),angular.module("app/account/partials/signup_confirm_invalid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_invalid.html",'<!-- Registration confirmation invalid -->\n<div class="account">\n\n    <div class="account__section">\n\n        <!-- Explain -->\n        <span class="account__explain">\n            Sorry, we couldn\'t validate your email. Maybe the link in the email is too old..\n        </span>\n        <a href="javascript:void(0)" class="link-navigation" ng-click="goHome()">Request the email again</a>\n    </div>\n\n</div>\n')}]),angular.module("app/account/partials/signup_confirm_valid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_valid.html",'<!-- Registration confirmation valid -->\n\n<!-- Account sections -->\n<div class="account">\n\n    <!--Sign up-->\n    <div class="account__section">\n\n        <!-- Title -->\n        <h1 class="account__title">Let\'s finalize your account!</h1>\n\n        <!-- Sign-up form -->\n        <form name="signUpForm" ng-submit="signUp(signUpData)" novalidate focus-first-error>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                <!-- Flash messages. -->\n                <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n                <!-- Form groups -->\n                <div class="form-group" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.firstName.$invalid || badPostSubmitResponse)}">\n                    <input class="form-group-input__input" type="text" placeholder="First Name" name="firstName" ng-model="signUpData.firstName" auto-focus required />\n                    <span class="form-group-input__message" ng-if="signUpForm.firstName.$invalid && signUpForm.$submitted">Please tell us your First Name.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.lastName.$invalid || badPostSubmitResponse)}">\n                    <input class="form-group-input__input" type="text" placeholder="Last Name" name="lastName" ng-model="signUpData.lastName" required />\n                    <span class="form-group-input__message" ng-if="signUpForm.lastName.$invalid && signUpForm.$submitted">Please tell us your Last Name.</span>\n                </div>\n\n                <!-- Email input -->\n                <div class="form-group" ng-class="{\'has-error\': signUpForm.email.$invalid && signUpForm.$submitted}">\n                    <input class="form-group-input__input" type="email" placeholder="Email address" name="email" ng-model="signUpData.email" required valid-email unique-email />\n\n                    <!-- Error messages -->\n                    <div class="home__signup__sections__section__validation-messages" ng-class="{\'has-error\': signUpForm.email.$invalid && signUpForm.$submitted}" ng-messages="signUpForm.email.$error" ng-if="signUpForm.$submitted">\n                        <div ng-message="required">Your email address is mandatory.</div>\n                        <div ng-message="validEmail">This email address is not valid.</div>\n                        <div ng-message="uniqueEmail">This email address is already used.</div>\n                    </div>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--medium-offset">\n\n                    <!-- Form group -->\n                    <div class="form-group form-group--small-offset" ng-class="{\'has-error\': signUpForm.$submitted && (signUpForm.password.$invalid || badPostSubmitResponse)}">\n                        <input class="form-group-input__input" type="password" placeholder="Choose a password" name="password" ng-model="signUpData.password" required strong-password />\n\n                        <div class="form-group-input__message" ng-messages="signUpForm.password.$error" ng-if="signUpForm.$submitted">\n                            <div ng-message="required">Please choose a password.</div>\n                            <div ng-message="strongPassword">Your password needs to be at least 7 characters long.</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="account__controls__form__info">\n                    <div class="account__controls__form__info__left">Timezone</div>\n                    <div class="account__controls__form__info__right simptip-position-bottom simptip-fade simptip-smooth simptip-multiline" data-tooltip="We automatically detected your timezone. You can change this later in the Settings page.">{{timezoneDetails.value}}</div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Create new account</button>\n            </div>\n        </form>\n\n    </div>\n\n    <div class="account__section__terms">\n        * By singing up you agree to our\n        <a href="javascript:void(0)" ui-sref="privacy" class="account__section__terms__link">Terms and Privacy policy</a>\n    </div>\n\n</div>')}]),angular.module("app/account/partials/signup_setup.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_setup.html",'<div class="sign-up__setup">\n\n    <div class="sign-up__setup__box">\n\n        <h2 class="sign-up__setup__title">Awesome! Just one more step.</h2>\n\n        <!-- Set up form -->\n        <form name="setUpForm" ng-submit="setUp()" novalidate>\n\n            <div class="sign-up__setup__section">\n                Please choose your currency:\n                <div class="sign-up__setup__section--currency" ng-class="{\'has-error\': setUpForm.$submitted && (setUpForm.$error[\'autocomplete-required\'] || setUpForm.currency.$invalid || badPostSubmitResponse)}">\n                    <div angucomplete-alt\n                         selected-object="currency"\n                         local-data="currencies"\n                         search-fields="displayName,currencyCode"\n                         title-field="currencyCode,displayName"\n                         field-required="true"\n                         placeholder="Start typing your currency..."\n                         maxlength="50"\n                         pause="1"\n                         minlength="0"\n                         input-class="sign-up__setup__section--currency__input"\n                         match-class="angucomplete-highlight">\n                    </div>\n\n                    <!-- Error messages -->\n                    <div class="form-group-input__message form-group-input__message--currency" ng-class="{\'has-error\': setUpForm.$invalid && setUpForm.$submitted}" ng-messages="setUpForm.$error" ng-if="setUpForm.$submitted">\n                        <div ng-message="autocomplete-required">Currency is missing or is invalid.</div>\n                        <div ng-message="required">Please add</div>\n                    </div>\n\n                    <div class="form-group-input__message form-group-input__message--currency" ng-if="setUpForm.category.$invalid && setUpForm.$submitted">Please add a currency.</div>\n                </div>\n            </div>\n\n            <div class="sign-up__setup__tip">\n                Please choose\n                <strong>at least 3</strong> categories we suggested or add your own. You can change them later as well.\n            </div>\n\n            <div class="sign-up__box__categories">\n\n                <div class="sign-up__box__categories__category" ng-repeat="category in categories track by category.name">\n                    <div class="category-name" ng-style="{\'background\':category.color}" ng-class="{ \'category-name--unselected\': !category.selected }" ng-click="toggleCategorySelection($index)"> {{category.name}}</div>\n                </div>\n\n                <!--Toggle form-->\n                <button ng-if="! showCategoryOnTheFlyInput" class="sign-up__box__categories__addbtn" ng-click="toggleContent()">+ Add another</button>\n\n                <ng-form class="sign-up__box__categories__category__form"\n                         name="categoryOnTheFlyForm"\n                         submit-on="add-category-on-the-fly-event"\n                         ng-submit="onSubmitted($event)"\n                         ng-if="showCategoryOnTheFlyInput">\n\n                    <div ng-class="{\'has-error\': categoryOnTheFlyForm.$submitted && categoryOnTheFlyForm.name.$invalid}">\n\n                        <!-- Error messages -->\n                        <div class="form-group-input__message" ng-class="{\'has-error\': categoryOnTheFlyForm.name.$invalid}" ng-messages="categoryOnTheFlyForm.name.$error" ng-if="categoryOnTheFlyForm.$submitted">\n                            <div ng-message="required">Name is mandatory.</div>\n                            <div ng-message="validCategoryName">Name is not valid.</div>\n                        </div>\n\n                        <!--The on the fly input category-->\n                        <input class="sign-up__box__categories__addinput" type="text" name="name"\n                               maxlength="15"\n                               ng-model="$parent.categoryOnTheFly"\n                               ng-enter="triggerSubmit()"\n                               ng-blur="cancelAddCategoryOnTheFly()"\n                               auto-focus required valid-category-name />\n\n                    </div>\n                </ng-form>\n            </div>\n\n            <!-- Flash messages. -->\n            <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n            <!-- Button -->\n            <button class="sign-up__setup__btn" ng-disabled="! isEnoughSelectedCategories()" type="submit">{{isSaving ? \'Saving..\' : \'Done! Let\\\'s start!\'}}</button>\n        </form>\n\n    </div>\n\n</div>');

}]),angular.module("app/account/partials/validate_password_reset_token_abstract.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_abstract.html",'<!--Validate password reset token section - abstract view-->\n<div class="account">\n\n    <div ui-view></div>\n\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token_invalid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_invalid.html",'<!-- Invalid token result view -->\n<div class="alert alert-danger">\n    The token is invalid or expired.\n    <br />\n    <br />\n\n    <!-- Button container -->\n    <a href="javascript:void(0)" ng-click="continueToResetPassword()">Let me try again.</a>\n    <br />\n    <span ng-if="isUserAuthenticated">\n        You are authenticated. You will be logged off if you want to try again.\n    </span>\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token_valid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_valid.html",'<!-- Validate password reset token section -->\n<div class="account__section" ng-hide="successfullyReseted">\n\n    <!-- Title -->\n    <h1 class="account__title">Reset your password.</h1>\n\n    <!-- Reset password form -->\n    <form name="resetPasswordForm" ng-submit="resetPassword(resetPasswordData)" novalidate>\n\n        <!-- Flash messages. -->\n        <div flash-messages flash="flash" identifier-id="{{alertIdentifierId}}"></div>\n\n        <!-- Form group -->\n        <div class="form-group-input" ng-class="{\'has-error\': resetPasswordForm.$submitted && (resetPasswordForm.password.$invalid || badPostSubmitResponse)}">\n            <input class="form-group-input__input" type="password" placeholder="New password" name="password" ng-model="resetPasswordData.password" auto-focus required />\n            <span class="form-group-input__message" ng-if="resetPasswordForm.password.$invalid && resetPasswordForm.$submitted">Your new password is mandatory.</span>\n        </div>\n\n        <!-- Form group -->\n        <div class="form-group-input" ng-class="{\'has-error\': resetPasswordForm.$submitted && (resetPasswordForm.passwordConfirmation.$invalid || badPostSubmitResponse)}">\n            <input class="form-group-input__input" type="password" placeholder="New password confirmation" name="passwordConfirmation" ng-model="resetPasswordData.passwordConfirmation" required />\n            <span class="form-group-input__message" ng-if="resetPasswordForm.passwordConfirmation.$invalid && resetPasswordForm.$submitted">Your confirm password is mandatory.</span>\n        </div>\n\n        <!-- Button container -->\n        <button class="account__btn" type="submit">Reset password</button>\n    </form>\n\n</div>\n\n<!-- Change password section successfully-->\n<div class="account__section" ng-hide="!successfullyReseted">\n\n    <!-- Title -->\n    <h1 class="account__title">Successfully</h1>\n\n    <!-- Explain -->\n    <span class="account__explain">\n        We\'ve successfully updated your password.\n    </span>\n</div>')}]),angular.module("app/insight/partials/insight.html",[]).run(["$templateCache",function(a){a.put("app/insight/partials/insight.html",'<div header class="view-container__header"></div>\n\n<div class="view-container__content">\n\n    <div class="insights__textsection">\n        Here are some useful insights around your expenses.\n    </div>\n\n    <div class="insights__datepicker">\n        <button type="submit"> < </button>\n        <button type="submit" class="insights__datepicker__month"> March 2015 </button>\n        <button type="submit"> > </button>\n    </div>\n\n    <div class="insights__summary">\n        <div class="insights__summary__thumbnail">\n            <span class="insights__summary__thumbnail__number">7.324</span>\n            <span class="insights__summary__thumbnail__label">TOTAL</span>\n        </div>\n        <div class="insights__summary__thumbnail">\n            <span class="insights__summary__thumbnail__number">134</span>\n            <span class="insights__summary__thumbnail__label">transactions</span>\n        </div>\n        <div class="insights__summary__thumbnail">\n            <span class="insights__summary__thumbnail__number">+5%</span>\n            <span class="insights__summary__thumbnail__label">from previous month</span>\n        </div>\n    </div>\n\n    <canvas id="bar"\n            class="chart chart-bar"\n            data="insightLineData"\n            series="insightLineSeries"\n            legend="true"\n            labels="insight.model.insightLabels">\n    </canvas>\n\n    <div class="insights__chart__doughnut">\n        <canvas class="chart chart-doughnut"\n                data="insight.model.insightData"\n                labels="insight.model.insightLabels"\n                colours="insight.model.insightColors"></canvas>\n    </div>\n\n    <canvas id="line"\n            class="chart chart-line"\n            data="insightLineData"\n            labels="insight.model.insightLabels"\n            series="insightLineSeries"\n            legend="true"></canvas>\n\n    <!-- <canvas id="line"\n             class="chart chart-line"\n             data="insight.model.insightData"\n             labels="insight.model.insightLabels"\n             series="insight.model.insightColors"\n             legend="true"></canvas>-->\n\n    <!--<canvas id="pie"-->\n            <!--class="chart chart-pie"-->\n            <!--data="insight.model.insightData"-->\n            <!--colours="insight.model.insightColors"-->\n            <!--labels="insight.model.insightLabels"></canvas>-->\n</div>\n\n<div footer class="view-container__footer"></div>')}]),angular.module("app/feedback/partials/feedback-modal.html",[]).run(["$templateCache",function(a){a.put("app/feedback/partials/feedback-modal.html",'<form name="feedbackForm" ng-submit="sendFeedbackAndClose(feedbackForm)" novalidate focus-first-error>\n\n    <div class="feedback-modal__header">Feedback</div>\n\n    <div class="expense-modal__form__cancel">\n        <button type="button" class="close" ng-click="dismissFeedbackModal()" aria-label="Close">\n            <span aria-hidden="true">×</span>\n        </button>\n    </div>\n\n    <div class="modal-body" ng-if="! isSending && ! isSent">\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.subject.$invalid && feedbackForm.$submitted}">\n            <input class="form-control" type="text" name="subject" ng-model="feedback.model.subject" placeholder="Subject" required />\n        </div>\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.message.$invalid && feedbackForm.$submitted}">\n            <textarea class="form-control" rows="6" name="message" ng-model="feedback.model.message" placeholder="Your message" required></textarea>\n        </div>\n    </div>\n\n    <div class="modal-body" ng-if="isSending">\n        <div class="sending-status">Sending your message...</div>\n    </div>\n\n    <div class="modal-body" ng-if="isSent">\n        <div class="sending-status">Thanks! We\'ll get back to you.</div>\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-link" type="button" ng-click="dismissFeedbackModal()">Cancel</button>\n        <button class="btn btn-primary" type="submit" ng-disabled="isSending || isSent">Send</button>\n    </div>\n\n</form>')}]),angular.module("app/common/partials/emailList/emailList.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/emailList/emailList.html",'<div ng-repeat="email in emails track by $index">\n    <ng-form name="emailForm">\n        <div class="form-group form-group--email-icon" ng-class="{\'has-error\': emailForm.email.$invalid && parentForm.$submitted}">\n\n            <!--Inputs : first is your email-->\n            <input class="form-control form-control--friend-email" type="email" placeholder="{{$index === 0 ? \'Your email\' : \'Your friend\\\'s email address\'}}" name="email" ng-model="emails[$index].email" required ng-disabled="$index === 0" />\n\n            <!--Remove emails buttons-->\n            <a href="javascript:void(0)" ng-if="$index > 0" class="close" tabindex="-1" ng-click="removeEmail($index)">×</a>\n        </div>\n    </ng-form>\n</div>\n\n<a class="btn-add-emails" href="javascript:void(0)" ng-click="addEmail()" ng-show="canAddEmail">Add another email recipient</a>')}]),angular.module("app/common/partials/flash-messages.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/flash-messages.html",'<!-- Flash messages. -->\n<div ng-attr-id="{{ identifierId }}" flash-alert active-class="in alert" class="alert--center fade" duration="0">\n    <span class="close" ng-click="hide()">&times;</span>\n    <span class="alert-message">{{flash.message}}</span>\n</div>')}]),angular.module("app/common/partials/footer-home.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/footer-home.html",'<footer class="footer">\n    <div class="footer__logo">\n        (C) 2015 Revaluate\n    </div>\n\n    <ul class="footer__links">\n        <li>Read our <a href="http://blog.revaluate.io">Blog</a></li>\n        <li>Send us an <a href="mailto:hello@revaluate.io">Email</a></li>\n        <li>Follow us on <a href="https://twitter.com/revaluateapp">Twitter</a></li>\n        <li>Like us on <a href="https://www.facebook.com/revaluateapp">Facebook</a></li>\n    </ul>\n</footer>')}]),angular.module("app/common/partials/footer.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/footer.html",'<footer class="footer">\n    <div class="footer__logo">\n        (C) 2015 Revaluate\n    </div>\n\n    <ul class="footer__links">\n        <li>Read our <a href="http://blog.revaluate.io">Blog</a></li>\n        <li>Follow us on <a href="https://twitter.com/revaluateapp">Twitter</a></li>\n        <li>Like us on <a href="https://www.facebook.com/revaluateapp">Facebook</a></li>\n    </ul>\n</footer>')}]),angular.module("app/common/partials/header-home.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/header-home.html",'<div class="header-home__wrapper">\n\n    <header class="header-home">\n\n        <div class="header-home__brand">\n            <div class="header-home__brand--logo">Logo</div>\n            <a href="javascript:void(0)" class="header-home__brand--name">Revaluate</a>\n        </div>\n\n\n        <ul class="header-home__navigation">\n            <li><a href="javascript:void(0)">Pricing</a></li>\n            <li><a href="javascript:void(0)">Blog</a></li>\n            <li><a href="javascript:void(0)">Contact</a></li>\n            <li><button class="header-home__navigation--btn" account-modal-toggle="login">Log in</button></li>\n        </ul>\n\n    </header>\n\n</div>')}]),angular.module("app/common/partials/header.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/header.html",'<header class="header">\n\n    <div class="header__brand">\n        <a href="javascript:void(0)" class="header__brand--name">Revaluate</a>\n    </div>\n\n    <div class="dropdown header__dropdown" dropdown is-open="status.isopen">\n        <button class="dropdown-toggle header__dropdown__toggle" ng-show="currentUser.model.firstName + currentUser.model.lastName" dropdown-toggle data-toggle="dropdown" role="button" aria-expanded="false">\n            <span class="header__dropdown__avatar">AV</span>\n            {{currentUser.model.firstName + " " + currentUser.model.lastName}}\n            <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu header__dropdown__menu" role="menu">\n            <li><a class="nav-link" href="javascript:void(0)" ui-sref="settings">Preferences</a></li>\n            <li><a class="nav-link" href="javascript:void(0)" id="feedback-trigger" ng-controller="FeedbackModalController" ng-click="openFeedbackModal()">Send feedback</a></li>\n            <li><a class="nav-link" href="javascript:void(0)" ui-sref="account:logout">Logout</a></li>\n        </ul>\n    </div>\n\n    <ul class="header__navigation">\n        <li><a href="javascript:void(0)" ui-sref="expenses.regular">Wallet</a></li>\n        <li><a href="javascript:void(0)" ui-sref="insights">Insights</a></li>\n        <li><a href="javascript:void(0)">Goals</a><span>Coming soon!</span></li>\n    </ul>\n\n</header>')}]),angular.module("app/common/partials/timepickerPopup/timepickerPopup.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/timepickerPopup/timepickerPopup.html",'<button type="button" class="btn btn--expense-popup bg-sprite dropdown-toggle" animate animate-on="nlpDate:timeChange" animate-class="highlight-button" dropdown-toggle> {{date | friendlyHourTimePicker}}</button>\n\n<ul class="dropdown-menu dropdown-menu-time-picker" perfect-scrollbar suppress-scroll-x="true" wheel-speed="52" update-on="perfectScrollbar:update">\n    <li ng-repeat="time in times" ng-class="{selected: highlightSelected && time.index == selectedIndex}">\n        <a href ng-click="setTime(time)">{{time.timestamp | friendlyHourTimePicker}}</a>\n    </li>\n</ul>\n')}]),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(a){a.put("template/accordion/accordion-group.html",'<div class="panel panel-default">\n  <div class="panel-heading">\n    <h4 class="panel-title">\n      <a href class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(a){a.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]),angular.module("template/alert/alert.html",[]).run(["$templateCache",function(a){a.put("template/alert/alert.html",'<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissable\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')}]),angular.module("template/carousel/carousel.html",[]).run(["$templateCache",function(a){a.put("template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n    <ol class="carousel-indicators" ng-show="slides.length > 1">\n        <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-left"></span></a>\n    <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-right"></span></a>\n</div>\n')}]),angular.module("template/carousel/slide.html",[]).run(["$templateCache",function(a){a.put("template/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>\n")}]),angular.module("template/datepicker/datepicker.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/datepicker.html",'<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>')}]),angular.module("template/datepicker/day.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/day.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/month.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/month.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/popup.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/popup.html",'<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group pull-left">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n')}]),angular.module("template/datepicker/year.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/year.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/modal/backdrop.html",[]).run(["$templateCache",function(a){a.put("template/modal/backdrop.html",'<div class="modal-backdrop fade {{ backdropClass }}"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')}]),angular.module("template/modal/window.html",[]).run(["$templateCache",function(a){a.put("template/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" modal-transclude></div></div>\n</div>')}]),angular.module("template/pagination/pager.html",[]).run(["$templateCache",function(a){a.put("template/pagination/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious(), previous: align}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext(), next: align}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n</ul>')}]),angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function(a){a.put("template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="boundaryLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(1)">{{getText(\'first\')}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active}"><a href ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n  <li ng-if="boundaryLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(totalPages)">{{getText(\'last\')}}</a></li>\n</ul>')}]),angular.module("template/popover/popover.html",[]).run(["$templateCache",function(a){a.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("template/progressbar/bar.html",[]).run(["$templateCache",function(a){a.put("template/progressbar/bar.html",'<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>')}]),angular.module("template/progressbar/progress.html",[]).run(["$templateCache",function(a){a.put("template/progressbar/progress.html",'<div class="progress" ng-transclude></div>')}]),angular.module("template/progressbar/progressbar.html",[]).run(["$templateCache",function(a){a.put("template/progressbar/progressbar.html",'<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>\n</div>')}]),angular.module("template/rating/rating.html",[]).run(["$templateCache",function(a){a.put("template/rating/rating.html",'<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <i ng-repeat="r in range track by $index" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')">\n        <span class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    </i>\n</span>')}]),angular.module("template/tabs/tab.html",[]).run(["$templateCache",function(a){a.put("template/tabs/tab.html",'<li ng-class="{active: active, disabled: disabled}">\n  <a href ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("template/tabs/tabset.html",[]).run(["$templateCache",function(a){a.put("template/tabs/tabset.html",'<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')}]),angular.module("template/timepicker/timepicker.html",[]).run(["$templateCache",function(a){a.put("template/timepicker/timepicker.html",'<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n		<tr>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n				<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td>:</td>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n				<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n	</tbody>\n</table>\n')}]),angular.module("template/tooltip/tooltip-html-unsafe-popup.html",[]).run(["$templateCache",function(a){a.put("template/tooltip/tooltip-html-unsafe-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(a){a.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]),angular.module("template/typeahead/typeahead-match.html",[]).run(["$templateCache",function(a){a.put("template/typeahead/typeahead-match.html",'<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>')}]),angular.module("template/typeahead/typeahead-popup.html",[]).run(["$templateCache",function(a){a.put("template/typeahead/typeahead-popup.html",'<ul class="dropdown-menu" ng-show="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n')}]);